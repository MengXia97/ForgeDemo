{"version":3,"file":"AutodeskForgeDesignAutomation.cjs.js","sources":["../src/authManager.js","../src/response.check.js","../src/defaultConfig.js","../src/AutodeskForgeDesignAutomationClient.js","../src/model/ISetting.js","../src/model/Verb.js","../src/model/Parameter.js","../src/model/Activity.js","../src/model/Alias.js","../src/model/AliasPatch.js","../src/model/UploadAppBundleParameters.js","../src/model/AppBundle.js","../src/model/BackendLimits.js","../src/model/Engine.js","../src/model/FrontendLimits.js","../src/model/IArgument.js","../src/model/PublicKey.js","../src/model/NicknameRecord.js","../src/model/PageAlias.js","../src/model/PageInt32.js","../src/model/ShareType.js","../src/model/Share.js","../src/model/PageShare.js","../src/model/PageString.js","../src/model/ServiceLimit.js","../src/model/SignedUrl.js","../src/model/Statistics.js","../src/model/Status.js","../src/model/WorkItemSignatures.js","../src/model/WorkItem.js","../src/model/WorkItemStatus.js","../src/model/StringArgument.js","../src/model/StringSetting.js","../src/model/UrlSetting.js","../src/model/XrefTreeArgument.js","../src/api/AutodeskForgeDesignAutomationApi.js","../src/index.js"],"sourcesContent":["class OAuth2Manager {\n    constructor(config) {\n        const that = this;\n        that.authConfig = config;\n        that.oauth2Token = {};\n        that.preserveOAuth2Config();\n    }\n    clearOff () {\n        const that = this;\n        setTimeout(function() {\n            delete that.refreshTokenPromise;\n            if(that._oauth2RefreshTokenScheduled) {\n                window.clearTimeout(that._oauth2RefreshTokenScheduled);\n            }\n            delete that.fetchTokenPromise;\n        }, 10);\n    }\n    refreshOAuth2Token () {\n        const that = this;\n        const oauth2Config = that.authConfig;\n        if(that.refreshTokenPromise) return that.refreshTokenPromise;\n        if(that._oauth2RefreshTokenScheduled) {\n            window.clearTimeout(that._oauth2RefreshTokenScheduled);\n            delete that._oauth2RefreshTokenScheduled;\n        }\n        if(!isNaN(oauth2Config.expires_in) && (typeof oauth2Config.refreshToken === \"function\")) {\n            that._oauth2RefreshTokenScheduled = setTimeout(function() {\n                that.refreshTokenPromise = oauth2Config.refreshToken();\n                that.refreshTokenPromise.then(function(data) {\n                    that.clearOff();\n                    that.storeOAuth2Token(data);\n                    that.refreshOAuth2Token();\n                }, function() {\n                    that.clearOff();\n                    that.fetchToken();\n                });\n            }, Math.max(oauth2Config.expires_in, oauth2Config.expires_in - 100));\n        }\n    }\n    fetchOAuth2Token () {\n        const that = this;\n        const oauth2Config = that.authConfig;\n        if(that.fetchTokenPromise) return that.fetchTokenPromise;\n        if(typeof oauth2Config.fetchToken === \"function\") {\n            that.fetchTokenPromise = oauth2Config.fetchToken();\n            return that.fetchTokenPromise.then(function(data) {\n                that.clearOff();\n                that.storeOAuth2Token(data);\n                that.refreshOAuth2Token();\n            }, function() {\n                that.clearOff();\n                that.fetchToken();\n            });\n        }\n    }\n    storeOAuth2Token (data) {\n        const that = this;\n        that.oauth2Token = {\n            accessToken: data.accessToken || data.access_token,\n            expires_in: data.expiresIn || data.expires_in\n        };\n    }\n    get OAuth2Token() {\n        return Object.assign({}, this.oauth2Token);\n    }\n    preserveOAuth2Config() {\n        const that = this;\n        const oauth2Config = that.authConfig;\n        if(oauth2Config.accessToken) {\n            that.storeOAuth2Token(oauth2Config);\n            that.refreshOAuth2Token();\n        } else {\n            that.fetchOAuth2Token();\n        }\n    }\n    getOAuth2TokenInfo () {\n        const that = this;\n        return new Promise(function(resolve, reject) {\n            let tokenFetcher = that.refreshTokenPromise || that.fetchTokenPromise;\n            if(tokenFetcher) {\n                tokenFetcher.then(function() {\n                    resolve(that.OAuth2Token);\n                }, function() {\n                    reject(\"Error while fetching the accessToken\");\n                });\n            } else if (that.oauth2Token.accessToken) {\n                resolve(that.oauth2Token);\n            } else {\n                resolve();\n            }\n        });\n    }\n    set accessToken (val) {\n        if(val) {\n            this.oauth2Token.accessToken = val;\n        }\n    }\n    set expires_in (val) {\n        if(!isNaN(val)) {\n            this.oauth2Token.expires_in = val;\n        }\n    }\n    set fetchToken (fun) {\n        const that = this;\n        if(typeof fun === \"function\") {\n            that.authConfig.fetchToken = fun;\n            that.fetchOAuth2Token();\n        } else {\n            throw \"fetchToken value must be a function\";\n        }\n    }\n    set refreshToken (fun) {\n        const that = this;\n        if(typeof fun === \"function\") {\n            that.authConfig.refreshToken = fun;\n            that.refreshOAuth2Token();\n        } else {\n            throw \"refreshToken value must be a function\";\n        }\n    }\n    get type () {\n        return \"oauth2\";\n    }\n}\n\nclass apiKeyManager {\n    constructor (config) {\n        this.authConfig = config;\n    }\n    getAPIKeyInfo () {\n        const that = this;\n        return new Promise(function(resolve, reject) {\n            let apiKey = that.authConfig;\n            if(apiKey) {\n                resolve(apiKey);\n            } else {\n                reject(\"No APIkey Found\");\n            }\n        });\n    }\n    get type () {\n        return \"apiKey\";\n    }\n}\n\nclass basicAuthManager {\n    constructor (config) {\n        this.authConfig = config;\n    }\n    getBasicAuthInfo () {\n        const that = this;\n        return new Promise(function(resolve, reject) {\n            let basicAuth = that.authConfig;\n            if(basicAuth) {\n                resolve(basicAuth);\n            } else {\n                reject(\"No Basic auth info Found\");\n            }\n        });\n    }\n    get type () {\n        return \"basic\";\n    }\n}\n\n\nclass AuthManager {\n    constructor (config) {\n        const that = this;\n        that._authentications = config;\n        that.authentications = {};\n        that.init();\n    }\n    init() {\n        const that = this;\n        for(let authName in that._authentications) {\n            let authConfig = that._authentications[authName];\n            let manager = null;\n            switch(authConfig.type) {\n                case \"oauth2\":\n                    manager = new OAuth2Manager(authConfig);\n                break;\n                case \"apiKey\":\n                case \"basic\":\n                    manager = Object.assign({}, authConfig);\n                    manager = Object.assign({}, authConfig);\n                break;\n                default:\n                    throw new Error('Unknown authentication type: ' + auth.type);\n            }\n            that.authentications[authName] = manager;\n        }\n    }\n}\n\nconst authentications = {\n\n\n        '2-legged': {type: 'oauth2'},\n\n\n        '3-legged': {type: 'oauth2'}\n}\n\nlet authManager = new AuthManager(authentications);\n\nexport default authManager;","// Taken from https://github.com/segmentio/superagent-retry. We needed custom retry behavior. So using retry checks directly.\n\n/**\n * Connection reset detection\n */\n\nfunction econnreset(err, res) {\n    return err && err.code === 'ECONNRESET';\n}\n\n/**\n * Connection refused detection\n */\n\nfunction econnrefused(err, res) {\n    return err && err.code === 'ECONNREFUSED';\n}\n\n/**\n * Timeout detection\n */\n\nfunction etimedout(err, res) {\n    return err && err.code === 'ETIMEDOUT';\n}\n\n\n/**\n * Can't get address info\n */\n\nfunction eaddrinfo(err, res) {\n    return err && err.code === 'EADDRINFO';\n}\n\n\n/**\n * Socket timeout detection\n */\n\nfunction esockettimedout(err, res) {\n    return err && err.code === 'ESOCKETTIMEDOUT';\n}\n\n/**\n * Internal server error\n */\n\nfunction internal(err, res) {\n    return res && res.status === 500;\n}\n\n/**\n * Bad gateway error detection\n */\n\nfunction gateway(err, res) {\n    return res && [502, 503, 504].indexOf(res.status) !== -1;\n}\n\n\n/**\n * Superagent timeout errors // 408\n */\n\nfunction timeout(err, res) {\n    return err && /^timeout of \\d+ms exceeded$/.test(err.message);\n}\n\n\nfunction possibleServerError(error, response) {\n    let isServerSideIssue = \n        !!(econnreset(error, response) ||\n        econnrefused(error, response) ||\n        etimedout(error, response) ||\n        eaddrinfo(error, response) ||\n        esockettimedout(error, response) ||\n        gateway(error, response) ||\n        timeout(error, response) ||\n        aborted(error, response) ||\n        internal(error, response));\n\n    return isServerSideIssue;\n}\n\n/**\n* Superagent Connection aborted\n*/\n\nfunction aborted(err, response) {\n    return err && err.timeout && (err.code == 'ECONNABORTED');\n}\n\n/**\n* crossDomain error\n*/\n\nfunction crossdomain(err, response) {\n    return err && err.crossDomain;\n}\n\nfunction possibleClientError(error, response) {\n    return !!crossdomain(error, response);\n}\n\nexport default {\n    econnreset,\n    econnrefused,\n    etimedout,\n    eaddrinfo,\n    esockettimedout,\n    gateway,\n    timeout,\n    internal,\n    crossdomain,\n    aborted,\n    possibleServerError,\n    possibleClientError\n}","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\n\n/**\n* default resiliency configuration\n* retry.maxNumberOfRetries: maximum number of http request retries\n* retry.backoffDelay: minimum backoffDelay between two consecutive http requests\n* retry.backoffPolicy: backoffPolicy to calculate delay between two consecutive http requests. (e.g. fixedBackoff, exponentialBackoffWithJitter, exponentialBackoff)\n* circuitBreaker.volumeThreshold: The number of requests that have to be completed (within the rolling metrics window) before failure percentages can be calculated.\n* circuitBreaker.failureThreshold: The percent (in whole numbers) of failures that can occur in the rolling metrics window before the state of the Circuit Breaker switches to opened.\n* circuitBreaker.activeThreshold: The number of concurrent requests that can hang (ie, not complete) before the state of the Circuit Breaker switches to opened.\n* circuitBreaker.bucketCount: The number of buckets to be used to collect rolling stats in the rolling metrics window.\n* circuitBreaker.bucketDuration: The duration (in milliseconds) of each bucket within the rolling metrics window.\n* requestTimeout: The time (in milliseconds) that a pending request is allowed to hang (ie, not complete) before being timed-out in error.\n*/\n\nexport default {\n    \"retry\" : {\n        \"maxNumberOfRetries\": 3,\n        \"backoffDelay\": 1000,\n        \"backoffPolicy\": \"fixedBackoff\"\n    },\n    \n    \n    \"circuitBreaker\": {\n        \"volumeThreshold\": 10,\n        \"failureThreshold\": 10,\n        \"activeThreshold\": 50,\n        \"bucketCount\": 30,\n        \"bucketDuration\": 1000\n    },\n    \n    \n    \"requestTimeout\" : 5000\n    \n};","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport superagent from \"superagent\";\nimport stringify from \"qs\";\nimport retry from \"async/retry\";\nimport each from \"async/each\";\nimport {CircuitBreakerFactory} from \"@bennadel/circuit-breaker\";\nimport authManager from \"./authManager.js\";\nimport responseChecks from \"./response.check.js\";\nimport defaultConfig from \"./defaultConfig.js\";\n\n/**\n* @module AutodeskForgeDesignAutomationClient\n* @version 3.0.1\n*/\n\n/**\n* Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n* application to use this class directly - the *Api and model classes provide the public API for the service. The\n* contents of this file should be regarded as internal but are documented for completeness.\n* @alias module:AutodeskForgeDesignAutomationClient\n* @class\n*/\nexport default class AutodeskForgeDesignAutomationClient {\n    constructor(resiliencyConfig) {\n    \n    \tvar that = this;\n     \tthis.config = that._validateConfig(resiliencyConfig);\n     \t\n        /**\n         * The base URL against which to resolve every API call's (relative) path.\n         * @type {String}\n         * @default https://developer.api.autodesk.com/da/us-east\n         */\n        this.basePath = 'https://developer.api.autodesk.com/da/us-east'.replace(/\\/+$/, '');\n        /**\n         * The authentication methods to be included for all API calls.\n         * @type {Array.<String>}\n         */\n\n        this.authentications = {\n                    '2-legged': {type: 'oauth2'},\n                    '3-legged': {type: 'oauth2'}\n        };\n\n        /**\n         * The default HTTP headers to be included for all API calls.\n         * @type {Array.<String>}\n         * @default {}\n         */\n        this.defaultHeaders = {};\n\n        /**\n         * The default HTTP timeout for all API calls.\n         * @type {Number}\n         * @default \n         */\n        let requestTimeout = this.config.requestTimeout;\n        this.timeout = requestTimeout;\n\n        /**\n         * The default number of retries.\n         * @type {Number}\n         * @default \n         */\n        this.maxNumberOfRetries = this.config.retry.maxNumberOfRetries;\n\n        // Checkout https://www.npmjs.com/package/@bennadel/circuit-breaker#configuration-usage for more information\n        this.circuitBreakerConfig = {\n        \n            // The unique identifier of the underlying state instance, which is used for logging\n            id: \"Autodeskforgedesignautomation\",\n            \n            // The time (in milliseconds) that a pending request is allowed to hang (ie, not complete) before being timed-out in error.\n            requestTimeout: requestTimeout,\n            \n            // The number of requests that have to be completed (within the rolling metrics window) before failure percentages can be calculated.\n            volumeThreshold: this.config.circuitBreaker.volumeThreshold,\n            \n            // The percent (in whole numbers) of failures that can occur in the rolling metrics window before the state of the Circuit Breaker switches to opened.\n            failureThreshold: this.config.circuitBreaker.failureThreshold,\n            \n            // The number of concurrent requests that can hang (ie, not complete) before the state of the Circuit Breaker switches to opened.\n            activeThreshold: this.config.circuitBreaker.activeThreshold,\n            \n            // The number of buckets to be used to collect rolling stats in the rolling metrics window.\n            bucketCount: this.config.circuitBreaker.bucketCount,\n            \n            // The duration (in milliseconds) of each bucket within the rolling metrics window.\n            bucketDuration: this.config.circuitBreaker.bucketDuration,\n            \n            // The monitor -- Function or instance -- for external logging (ex, StatsD logging).\n            monitor: this.circuitBreakerMonitor.bind(this),\n            \n            // The function that determines if the given failure is an error; or, if it should be classified as a success (such as a 404 response).\n            isFailure: this.circuitBreakerIsFailure,\n            \n            // The global fallback to be used for all executions in the Circuit Breaker (which can be overridden locally with each execution).\n            fallback: undefined // {},\n        };\n\n        /**\n         * If set to false an additional timestamp parameter is added to all API GET calls to\n         * prevent browser caching\n         * @type {Boolean}\n         * @default true\n         */\n        this.cache = true;\n\n        /**\n         * If set to true, the client will save the cookies from each server\n         * response, and return them in the next request.\n         * @default false\n         */\n        this.enableCookies = false;\n\n        /*\n         * Used to save and return cookies in a node.js (non-browser) setting,\n         * if this.enableCookies is set to true.\n         */\n        if (typeof window === 'undefined') {\n          this.agent = new superagent.agent();\n        }\n\n        /*\n         * Allow user to override superagent agent\n         */\n        this.requestAgent = null;\n\n        /**\n        * Auth manager\n        */\n        this.authManager = authManager;\n\n        this.superagent = superagent;\n    }\n    \n    /**\n     * validates resiliency configuration and replaces missing configuration with default.\n     * @param config resiliency configuration\n     * @default {}\n     */\n\t_validateConfig(config) {\n\t\n    \tconst that = this;\n\t \n\t    if (typeof(config) === 'undefined') {\n\t        config = defaultConfig;\n\t        return config;\n\t    }\n\t \n\t    if (typeof(config.retry) === 'undefined') {\n\t        config.retry = defaultConfig.retry;\n\t    } else {\n\t        if (typeof(config.retry.maxNumberOfRetries) === 'undefined') {\n\t          config.retry.maxNumberOfRetries = defaultConfig.retry.maxNumberOfRetries;\n\t        }\n\t \n\t        if (typeof(config.retry.backoffDelay) === 'undefined') {\n\t          config.retry.backoffDelay = defaultConfig.retry.backoffDelay;\n\t        }\n\t \n\t        if (typeof(config.retry.backoffPolicy) === 'undefined') {\n\t          config.retry.backoffPolicy = defaultConfig.retry.backoffPolicy;\n\t        }\n\t    }\n\t \n\t    if (typeof(config.circuitBreaker) === 'undefined') {\n\t        config.circuitBreaker = defaultConfig.circuitBreaker;\n\t    } else {\n\t        if (typeof(config.circuitBreaker.volumeThreshold) === 'undefined') {\n\t          config.circuitBreaker.volumeThreshold = defaultConfig.circuitBreaker.volumeThreshold;\n\t        }\n\t        \n\t        if (typeof(config.circuitBreaker.failureThreshold) === 'undefined') {\n\t          config.circuitBreaker.failureThreshold = defaultConfig.circuitBreaker.failureThreshold;\n\t        }\n\t \n\t        if (typeof(config.circuitBreaker.activeThreshold) === 'undefined') {\n\t          config.circuitBreaker.activeThreshold = defaultConfig.circuitBreaker.activeThreshold;\n\t        }\n\t        \n\t        if (typeof(config.circuitBreaker.bucketCount) === 'undefined') {\n\t          config.circuitBreaker.bucketCount = defaultConfig.circuitBreaker.bucketCount;\n\t        }\n\n            if (typeof(config.circuitBreaker.bucketDuration) === 'undefined') {\n\t          config.circuitBreaker.bucketDuration = defaultConfig.circuitBreaker.bucketDuration;\n\t        }\n\t    }\n\t \n\t    if (typeof(config.requestTimeout) === 'undefined') {\n\t        config.requestTimeout = defaultConfig.requestTimeout;\n\t    }\n\t \n\t    return config;\n\t}\n\n    /**\n    * Monitor Callback for Circuit Breaker.\n    * @param eventType The Event Type.\n    * @param eventData The Event Data. // https://www.npmjs.com/package/@bennadel/circuit-breaker#logging-and-monitoring\n    */\n    circuitBreakerMonitor(eventType, eventData) {\n        if(typeof this.circuitBreakerMetricsListener === \"function\") {\n            try {\n                this.circuitBreakerMetricsListener(eventType, eventData);\n            } catch (e) {\n                console.log('Some error in Metrics listener');\n            }\n        }\n    }\n\n    /**\n    * Failure Callback for Circuit Breaker. The function that determines if the given failure is an error; or, if it should be classified as a success (such as a 404 response).\n    * @param eventType The Event Type.\n    * @param eventData The Event Data. // https://www.npmjs.com/package/@bennadel/circuit-breaker#logging-and-monitoring\n    */\n    circuitBreakerIsFailure(error) {\n        var serverIssue = responseChecks.possibleServerError(error.error, error.response);\n        return serverIssue;\n    }\n\n    /**\n    * Returns a string representation for an actual parameter.\n    * @param param The actual parameter.\n    * @returns {String} The string representation of <code>param</code>.\n    */\n    paramToString(param) {\n        if (param == undefined || param == null) {\n            return '';\n        }\n        if (param instanceof Date) {\n            return param.toJSON();\n        }\n\n        return param.toString();\n    }\n\n    /**\n    * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n    * NOTE: query parameters are not handled here.\n    * @param {String} path The path to append to the base URL.\n    * @param {Object} pathParams The parameter values to append.\n    * @returns {String} The encoded path with parameter values substituted.\n    */\n    buildUrl(path, pathParams) {\n        if (!path.match(/^\\//)) {\n            path = '/' + path;\n        }\n\n        var url = this.basePath + path;\n        url = url.replace(/\\{([\\w-]+)\\}/g, (fullMatch, key) => {\n            var value;\n            if (pathParams.hasOwnProperty(key)) {\n                value = this.paramToString(pathParams[key]);\n            } else {\n                value = fullMatch;\n            }\n\n            return encodeURIComponent(value);\n        });\n\n        return url;\n    }\n\n    /**\n    * Checks whether the given content type represents JSON.<br>\n    * JSON content type examples:<br>\n    * <ul>\n    * <li>application/json</li>\n    * <li>application/json; charset=UTF8</li>\n    * <li>APPLICATION/JSON</li>\n    * </ul>\n    * @param {String} contentType The MIME content type to check.\n    * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n    */\n    isJsonMime(contentType) {\n        return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n    }\n\n    /**\n    * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n    * @param {Array.<String>} contentTypes\n    * @returns {String} The chosen content type, preferring JSON.\n    */\n    jsonPreferredMime(contentTypes) {\n        for (var i = 0; i < contentTypes.length; i++) {\n            if (this.isJsonMime(contentTypes[i])) {\n                return contentTypes[i];\n            }\n        }\n\n        return contentTypes[0];\n    }\n\n    /**\n    * Checks whether the given parameter value represents file-like content.\n    * @param param The parameter to check.\n    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n    */\n    isFileParam(param) {\n        // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n        if (typeof require === 'function') {\n            let fs;\n            try {\n                fs = require('fs');\n            } catch (err) {}\n            if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n                return true;\n            }\n        }\n\n        // Buffer in Node.js\n        if (typeof Buffer === 'function' && param instanceof Buffer) {\n            return true;\n        }\n\n        // Blob in browser\n        if (typeof Blob === 'function' && param instanceof Blob) {\n            return true;\n        }\n\n        // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n        if (typeof File === 'function' && param instanceof File) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n    * Normalizes parameter values:\n    * <ul>\n    * <li>remove nils</li>\n    * <li>keep files and arrays</li>\n    * <li>format to string with `paramToString` for other cases</li>\n    * </ul>\n    * @param {Object.<String, Object>} params The parameters as object properties.\n    * @returns {Object.<String, Object>} normalized parameters.\n    */\n    normalizeParams(params) {\n        var newParams = {};\n        for (var key in params) {\n            if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n                var value = params[key];\n                if (this.isFileParam(value) || Array.isArray(value)) {\n                    newParams[key] = value;\n                } else {\n                    newParams[key] = this.paramToString(value);\n                }\n            }\n        }\n\n        return newParams;\n    }\n\n    /**\n    * Enumeration of collection format separator strategies.\n    * @enum {String}\n    * @readonly\n    */\n    get CollectionFormatEnum () {\n        return {\n            /**\n            * Comma-separated values. Value: <code>csv</code>\n            * @const\n            */\n            CSV: ',',\n\n            /**\n            * Space-separated values. Value: <code>ssv</code>\n            * @const\n            */\n            SSV: ' ',\n\n            /**\n            * Tab-separated values. Value: <code>tsv</code>\n            * @const\n            */\n            TSV: '\\t',\n\n            /**\n            * Pipe(|)-separated values. Value: <code>pipes</code>\n            * @const\n            */\n            PIPES: '|',\n\n            /**\n            * Native array. Value: <code>multi</code>\n            * @const\n            */\n            MULTI: 'multi'\n        }\n    };\n\n    /**\n    * Builds a string representation of an array-type actual parameter, according to the given collection format.\n    * @param {Array} param An array parameter.\n    * @param {module:AutodeskForgeDesignAutomationClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n    * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n    * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n    */\n    buildCollectionParam(param, collectionFormat) {\n        if (param == null) {\n            return null;\n        }\n        switch (collectionFormat) {\n            case 'csv':\n                return param.map(this.paramToString).join(',');\n            case 'ssv':\n                return param.map(this.paramToString).join(' ');\n            case 'tsv':\n                return param.map(this.paramToString).join('\\t');\n            case 'pipes':\n                return param.map(this.paramToString).join('|');\n            case 'multi':\n                //return the array directly as SuperAgent will handle it as expected\n                return param.map(this.paramToString);\n            default:\n                throw new Error('Unknown collection format: ' + collectionFormat);\n        }\n    }\n\n    /**\n    * Applies authentication headers to the request.\n    * @param {Object} request The request object created by a <code>superagent()</code> call.\n    * @param {Array.<String>} authNames An array of authentication method names.\n    */\n    applyAuthToRequest(request, authNames) {\n        const that = this;\n        return new Promise(function(resolve, reject) {\n            each(authNames, function(authName, cb) {\n                let manager = that.authManager.authentications[authName];\n                if(!manager) {\n                    cb('Unknown auth type');\n                }\n                switch (manager.type) {\n                    case 'basic':\n                        Promise.resolve(manager).then(function(auth) {\n                            if (auth && (auth.username || auth.password)) {\n                                request.auth(auth.username || '', auth.password || '');\n                            }\n                            cb();\n                        }, cb);\n                        break;\n                    case 'apiKey':\n                        Promise.resolve(manager).then(function(auth) {\n                            if (auth && auth.apiKey) {\n                                let data = {};\n                                if (auth.apiKeyPrefix) {\n                                    data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n                                } else {\n                                    data[auth.name] = auth.apiKey;\n                                }\n                                if (auth['in'] === 'header') {\n                                    request.set(data);\n                                } else {\n                                    request.query(data);\n                                }\n                            }\n                            cb();\n                        }, cb);\n                        break;\n                    case 'oauth2':\n                        manager.getOAuth2TokenInfo().then(function(auth) {\n                            if (auth && auth.accessToken) {\n                                request.set({\n                                    'Authorization': 'Bearer ' + auth.accessToken\n                                });\n                            }\n                            cb();\n                        }, cb);\n                        break;\n                }\n            }, function(err) {\n                if(!err) {\n                    resolve();\n                } else {\n                    reject(err);\n                }\n            });\n        });\n\n    }\n\n    /**\n    * Deserializes an HTTP response body into a value of the specified type.\n    * @param {Object} response A SuperAgent response object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns A value of the specified type.\n    */\n    deserialize(response, returnType) {\n        if (response == null || returnType == null || response.status == 204) {\n            return null;\n        }\n\n        // Rely on SuperAgent for parsing response body.\n        // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n        var data = response.body;\n        if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {\n            // SuperAgent does not always produce a body; use the unparsed response as a fallback\n            data = response.text;\n        }\n\n        return AutodeskForgeDesignAutomationClient.convertToType(data, returnType);\n    }\n\n\n    /**\n    * Invokes the REST service using the supplied settings and parameters.\n    * @param {String} path The base URL to invoke.\n    * @param {String} httpMethod The HTTP method to use.\n    * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n    * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n    * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n    * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n    * @param {Object} bodyParam The value to pass as the request body.\n    * @param {Array.<String>} authNames An array of authentication type names.\n    * @param {Array.<String>} contentTypes An array of request MIME types.\n    * @param {Array.<String>} accepts An array of acceptable response MIME types.\n    * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the constructor for a complex type.\n    * @param {module:AutodeskForgeDesignAutomationClient~callApiCallback} callback The callback function.\n    * @returns {Object} The SuperAgent request object.\n    */\n    _apiCaller(\n        path,\n        httpMethod,\n        pathParams,\n        queryParams,\n        headerParams,\n        formParams,\n        bodyParam,\n        authNames,\n        contentTypes,\n        accepts,\n        returnType,\n        callback,\n        request\n    ) {\n\n        const that = this;\n        var url = that.buildUrl(path, pathParams);\n        var request = superagent(httpMethod, url);\n        \n        // apply authentications\n        that.applyAuthToRequest(request, authNames).then(function() {\n            // set query parameters\n            if (httpMethod.toUpperCase() === 'GET' && that.cache === false) {\n                queryParams['_'] = new Date().getTime();\n            }\n\n            request.query(that.normalizeParams(queryParams));\n\n            // set header parameters\n            request.set(that.defaultHeaders).set(that.normalizeParams(headerParams));\n\n            // set requestAgent if it is set by user\n            if (that.requestAgent) {\n                request.agent(that.requestAgent);\n            }\n\n            // set request timeout\n            request.timeout(that.timeout);\n\n            var contentType = that.jsonPreferredMime(contentTypes);\n            if (contentType) {\n                // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n                if(contentType != 'multipart/form-data') {\n                    request.type(contentType);\n                }\n            } else if (!request.header['Content-Type']) {\n                request.type('application/json');\n            }\n\n            if (contentType === 'application/x-www-form-urlencoded') {\n                request.send(stringify(that.normalizeParams(formParams)));\n            } else if (contentType == 'multipart/form-data') {\n                var _formParams = that.normalizeParams(formParams);\n                for (var key in _formParams) {\n                    if (_formParams.hasOwnProperty(key)) {\n                        if (that.isFileParam(_formParams[key])) {\n                            // file field\n                            request.attach(key, _formParams[key]);\n                        } else {\n                            request.field(key, _formParams[key]);\n                        }\n                    }\n                }\n            } else if (bodyParam) {\n                request.send(bodyParam);\n            }\n\n            var accept = that.jsonPreferredMime(accepts);\n            if (accept) {\n                request.accept(accept);\n            }\n\n            if (returnType === 'Blob') {\n                request.responseType('blob');\n            } else if (returnType === 'String') {\n                request.responseType('string');\n            }\n\n            // Attach previously saved cookies, if enabled\n            if (that.enableCookies) {\n                if (typeof window === 'undefined') {\n                    that.agent.attachCookies(request);\n                } else {\n                    request.withCredentials();\n                }\n            }\n\n            // Filtering out client side errors to not to reach CircuitBreaker error count.\n            request.retry(that.maxNumberOfRetries * 2, responseChecks.possibleClientError);\n\n            let execute = () => {\n                request.end((error, response) => {\n                    if (callback) {\n                        var data = null;\n                        if (!error) {\n                            try {\n                                data = that.deserialize(response, returnType);\n                                if (that.enableCookies && typeof window === 'undefined'){\n                                    that.agent.saveCookies(response);\n                                }\n                            } catch (err) {\n                                error = err;\n                            }\n                        }\n                        callback(error, data, response, request);\n                    }\n                });\n            }\n\n            if(typeof that.config.requestExtender === \"function\") {\n                that.config.requestExtender(request, function() {\n                    execute();\n                });\n            } else {\n                execute();\n            }\n\n        }, function(error) {\n            callback(error, null, null, null);\n        });\n\n        // return request;\n    }\n\n\n    /**\n    * Invokes the REST service using the supplied settings and parameters.\n    * @param {String} path The base URL to invoke.\n    * @param {String} httpMethod The HTTP method to use.\n    * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n    * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n    * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n    * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n    * @param {Object} bodyParam The value to pass as the request body.\n    * @param {Array.<String>} authNames An array of authentication type names.\n    * @param {Array.<String>} contentTypes An array of request MIME types.\n    * @param {Array.<String>} accepts An array of acceptable response MIME types.\n    * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the constructor for a complex type.\n    // Injected Code --- Start\n    * @param {Object} config Optional Configuration parameters. Configure resiliency and request.\n    * @param {module:<#invokerPackage><&invokerPackage>/</invokerPackage><#apiPackage><&apiPackage>/</apiPackage><&classname>~<operationId>RequestExtender} config.requestExtender The callback function, accepting an argument: The SuperAgent request object. Customize request object before it is executed.\n    * @param {Integer} config.maxNumberOfRetries This number restricts the maximum number of retry attempts in valid conditions. If `canRetry` callback returns false, this number does not cause any impact.\n    // Injected Code --- End\n    * @returns {Promise} A {@link https://www.promisejs.org/|Promise} object.\n    */\n    callApi(\n        path,\n        httpMethod,\n        pathParams,\n        queryParams,\n        headerParams,\n        formParams,\n        bodyParam,\n        authNames,\n        contentTypes,\n        accepts,\n        returnType\n    ) {\n\n\t\t// add/update user agent\n\t\tif (typeof headerParams['User-Agent'] === 'undefined') {\n          headerParams['User-Agent'] = 'autodeskforgedesignautomation-js-sdk' + '/3.0.1' + ' (Forge RSDK)';\n        } else {\n          var userAgent = headerParams['User-Agent'];\n          userAgent = userAgent.concat(' autodeskforgedesignautomation-js-sdk').concat('/3.0.1').concat(' (Forge RSDK)');\n          headerParams['User-Agent'] = userAgent;\n        }\n        \n        const that = this;\n        const base = that.config.retry.backoffDelay;\n\t    const max_backoff = 10000;\n\t\t\n        const requestStrategies = {\n          \texponentialBackoffWithJitter: (retryCount) => {\n            \t// Calculation taken from AWS-SDK (https://github.com/aws/aws-sdk-js)\n            \tlet delay = Math.min(max_backoff, (Math.random() * 100) + (base + (Math.pow(2, retryCount) * 100)));\n              \treturn delay;\n          \t},\n          \texponentialBackoff: (retryCount) => {\n           \t\tlet delay = Math.min(max_backoff, (base + (Math.pow(2, retryCount) * 100)));\n            \treturn delay;\n          \t},\n          \tfixedBackoff: () => base\n        };\n\n        let aliasConfig = {\n            maxNumberOfRetries: that.config.retry.maxNumberOfRetries,\n            requestExtender: (request, cb) => {\n                const requestExtender = that.config.requestExtender;\n                if(typeof requestExtender === \"function\") {                \n                    try {\n                        requestExtender(request, cb);\n                    } catch(e) {\n                        console.log(e);\n                        cb();\n                    }\n                } else {\n                    cb();\n                }\n            },\n            canRetry: (data) => {\n                const canRetry = that.config.retry.backoffPolicy;;\n                const retryable = function() {\n                    // const request = data.request;\n                    // request._maxRetries = 20;\n\n                    // Filtering only server side errors. Because these errors contribute to Circuit Breaker error count.\n\n                    let isServerSideIssue = responseChecks.possibleServerError(data.error, data.response);\n                    return isServerSideIssue;\n\n                    // return request._shouldRetry(data.error, data.response);\n                }\n                if(false && (typeof canRetry === \"function\")) {\n                    try {\n                        return canRetry(data);\n                    } catch (e) {\n                        console.log(e);\n                        return retryable();\n                    }\n                } else {\n                    return retryable();\n                }\n            },\n            delayCalculator: (retryCount) => {\n                let delay = undefined;\n                var retryPolicy = that.config.retry.backoffPolicy;\n\n\t         \tswitch (retryPolicy) {\n\t\t            case \"exponentialBackoffWithJitter\":\n\t\t              \tdelay = requestStrategies[\"exponentialBackoffWithJitter\"](retryCount);\n\t\t             \t  break;\n\t\t            case \"exponentialBackoff\":\n\t\t              \tdelay = requestStrategies[\"exponentialBackoff\"](retryCount);\n\t\t              \tbreak;\n\t\t            case \"fixedBackoff\":\n\t\t              \tdelay = requestStrategies[\"fixedBackoff\"]();\n\t\t              \tbreak;\n\t\t            default:\n\t\t              \tdelay = requestStrategies[\"fixedBackoff\"]();\n\t\t        }\n            \treturn delay;\n            }\n        };\n\n        let _apiCaller = that._apiCaller.bind(\n            that, path,\n            httpMethod,\n            pathParams,\n            queryParams,\n            headerParams,\n            formParams,\n            bodyParam,\n            authNames,\n            contentTypes,\n            accepts,\n            returnType\n        );\n\n        let executor = function(cb) {\n            const _this = this;\n\n            let call = () => {\n                return new Promise((resolve, reject) => {\n                    let cb = (error, data, response, request) => {\n                        const resp = {\n                            error: error,\n                            data: data,\n                            response: response,\n                            request: request\n                        };\n                        if(error) {\n                            reject(resp);\n                        } else {\n                            resolve(resp);\n                        }\n                    };\n                    _apiCaller(cb);\n                });\n            };\n\n\t\t\tconst _circuitBreaker = _this.circuitBreaker || apiClientInstance.circuitBreaker;\n            _circuitBreaker.execute(call).then(function(result) {\n                cb(\n                    null,\n                    result.error ? null : result\n                );\n            }, function(errObj) {\n                cb(errObj);\n            });\n        };\n\n        let successCB, failureCB, callbackCB;\n\n        retry({\n            times: aliasConfig.maxNumberOfRetries,\n            interval: aliasConfig.delayCalculator,\n            errorFilter: aliasConfig.canRetry,\n        }, executor.bind(that), function(errObj, result) {\n            if(callbackCB) {\n                let fin = errObj || result;\n                callback(fin.error, fin.data, fin.response);\n            } else {\n                if(errObj) {\n                    failureCB(errObj.error || errObj);\n                } else {\n                    result = result || {};\n                    successCB({\n                        data: result.data,\n                        response: result.response\n                    });\n                }\n            }\n        });\n\n        return new Promise((resolve, reject) => {\n            successCB = resolve;\n            failureCB = reject;\n        });\n\n    }\n\n    /**\n    * Parses an ISO-8601 string representation of a date value.\n    * @param {String} str The date value as a string.\n    * @returns {Date} The parsed date object.\n    */\n    static parseDate(str) {\n        return new Date(str);\n    }\n    /**\n    * Converts a value to the specified type.\n    * @param {(String|Object)} data The data to convert, as a string or object.\n    * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n    * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n    * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n    * all properties on <code>data<code> will be converted to this type.\n    * @returns An instance of the specified type or null or undefined if data is null or undefined.\n    */\n    static convertToType(data, type) {\n        if (data === null || data === undefined)\n            return data\n\n        switch (type) {\n            case 'Boolean':\n                return Boolean(data);\n            case 'Integer':\n                return parseInt(data, 10);\n            case 'Number':\n                return parseFloat(data);\n            case 'String':\n                return String(data);\n            case 'Date':\n                return AutodeskForgeDesignAutomationClient.parseDate(String(data));\n            case 'Blob':\n                return data;\n            default:\n                if (type === Object) {\n                    // generic object, return directly\n                    return data;\n                } else if (typeof type === 'function') {\n                    // for model type like: User\n                    return type.constructFromObject(data);\n                } else if (Array.isArray(type)) {\n                    // for array type like: ['String']\n                    var itemType = type[0];\n\n                    return data.map((item) => {\n                        return AutodeskForgeDesignAutomationClient.convertToType(item, itemType);\n                    });\n                } else if (typeof type === 'object') {\n                    // for plain object type like: {'String': 'Integer'}\n                    var keyType, valueType;\n                    for (var k in type) {\n                        if (type.hasOwnProperty(k)) {\n                            keyType = k;\n                            valueType = type[k];\n                            break;\n                        }\n                    }\n\n                    var result = {};\n                    for (var k in data) {\n                        if (data.hasOwnProperty(k)) {\n                            var key = AutodeskForgeDesignAutomationClient.convertToType(k, keyType);\n                            var value = AutodeskForgeDesignAutomationClient.convertToType(data[k], valueType);\n                            result[key] = value;\n                        }\n                    }\n\n                    return result;\n                } else {\n                    // for unknown type, return the data directly\n                    return data;\n                }\n        }\n    }\n\n    /**\n    * Constructs a new map or array model from REST data.\n    * @param data {Object|Array} The REST data.\n    * @param obj {Object|Array} The target object or array.\n    */\n    static constructFromObject(data, obj, itemType) {\n        if (Array.isArray(data)) {\n            for (var i = 0; i < data.length; i++) {\n                if (data.hasOwnProperty(i))\n                    obj[i] = AutodeskForgeDesignAutomationClient.convertToType(data[i], itemType);\n            }\n        } else {\n            for (var k in data) {\n                if (data.hasOwnProperty(k))\n                    obj[k] = AutodeskForgeDesignAutomationClient.convertToType(data[k], itemType);\n            }\n        }\n    };\n}\n\n/**\n* The default API client implementation.\n* @type {module:AutodeskForgeDesignAutomationClient}\n*/\n\nvar apiClientInstance = new AutodeskForgeDesignAutomationClient();\n\nAutodeskForgeDesignAutomationClient.instance = apiClientInstance;\n\n// It's here to avoid duplicate Circuit breaker additions.\napiClientInstance.circuitBreaker = CircuitBreakerFactory.create(AutodeskForgeDesignAutomationClient.instance.circuitBreakerConfig);\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The ISetting model module.\n * @module model/ISetting\n * @version 3.0.1\n */\nexport default class ISetting {\n  /**\n   * Constructs a new <code>ISetting</code>.\n   * Marker interface for bound argument types, we may add methods here if we find something useful.\n   * @alias module:model/ISetting\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>ISetting</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ISetting} obj Optional instance to populate.\n   * @return {module:model/ISetting} The populated <code>ISetting</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new ISetting();\n    }\n    return obj;\n  }\n}\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n* Enum class Verb.\n* @enum {}\n* @readonly\n*/\nexport default class Verb {\n    \n        /**\n         * value: \"get\"\n         * @static\n         */\n        static get \"get\" () { return \"get\"; }\n\n    \n        /**\n         * value: \"head\"\n         * @static\n         */\n        static get \"head\" () { return \"head\"; }\n\n    \n        /**\n         * value: \"put\"\n         * @static\n         */\n        static get \"put\" () { return \"put\"; }\n\n    \n        /**\n         * value: \"post\"\n         * @static\n         */\n        static get \"post\" () { return \"post\"; }\n\n    \n        /**\n         * value: \"patch\"\n         * @static\n         */\n        static get \"patch\" () { return \"patch\"; }\n\n    \n        /**\n         * value: \"read\"\n         * @static\n         */\n        static get \"read\" () { return \"read\"; }\n\n    \n\n    /**\n    * Returns a <code>Verb</code> enum value from a Javascript object name.\n    * @param {Object} data The plain JavaScript object containing the name of the enum value.\n    * @return {module:model/Verb} The enum <code>Verb</code> value.\n    */\n    static constructFromObject(object) {\n        return object;\n    }\n    \n}\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport Verb from './Verb';\n\n\n/**\n * The Parameter model module.\n * @module model/Parameter\n * @version 3.0.1\n */\nexport default class Parameter {\n  /**\n   * Constructs a new <code>Parameter</code>.\n   * \n   * @alias module:model/Parameter\n   * @class\n   * @param verb {module:model/Verb} Request method (get, put, patch or post).\n   */\n  constructor(verb) {\n    this.verb = verb;\n  }\n\n  /**\n   * Constructs a <code>Parameter</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Parameter} obj Optional instance to populate.\n   * @return {module:model/Parameter} The populated <code>Parameter</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new Parameter();\n      if (data.hasOwnProperty('zip'))\n        obj.zip = AutodeskForgeDesignAutomationClient.convertToType(data['zip'], 'Boolean');\n      if (data.hasOwnProperty('ondemand'))\n        obj.ondemand = AutodeskForgeDesignAutomationClient.convertToType(data['ondemand'], 'Boolean');\n      if (data.hasOwnProperty('verb'))\n        obj.verb = Verb.constructFromObject(data['verb']);\n      if (data.hasOwnProperty('description'))\n        obj.description = AutodeskForgeDesignAutomationClient.convertToType(data['description'], 'String');\n      if (data.hasOwnProperty('required'))\n        obj.required = AutodeskForgeDesignAutomationClient.convertToType(data['required'], 'Boolean');\n      if (data.hasOwnProperty('localName'))\n        obj.localName = AutodeskForgeDesignAutomationClient.convertToType(data['localName'], 'String');\n    }\n    return obj;\n  }\n}\n\n/**\n * The parameter references a zip file. This is how this is interpreted in various scenarios: 1. verb==get implies that the byte stream should be unzipped to a folder designated by localName. 2. verb==put, patch, post the contents of the file or folder designated by localName will be zipped and sent. 3. Any other verb values result in an error. Default is false.\n * @member {Boolean} zip\n * @default false\n */\nParameter.prototype.zip = false;\n\n/**\n * The parameter will be accessed by the appbundle on demand and should not be used by the system. Default is false.\n * @member {Boolean} ondemand\n * @default false\n */\nParameter.prototype.ondemand = false;\n\n/**\n * Request method (get, put, patch or post).\n * @member {module:model/Verb} verb\n */\nParameter.prototype.verb = undefined;\n\n/**\n * The description of the parameter.\n * @member {String} description\n */\nParameter.prototype.description = undefined;\n\n/**\n * Specifies whether the corresponding WorkItem Argument is required. Default is false.\n * @member {Boolean} required\n * @default false\n */\nParameter.prototype.required = false;\n\n/**\n * The file or folder where the contents of an UrlArgument are placed. Note that this may be different than the `localName` for input arguments when [Content-Disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) header is specifified by the server. For `zip` = `true` this is a folder name.\n * @member {String} localName\n */\nParameter.prototype.localName = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport ISetting from './ISetting';\nimport Parameter from './Parameter';\n\n\n/**\n * The Activity model module.\n * @module model/Activity\n * @version 3.0.1\n */\nexport default class Activity {\n  /**\n   * Constructs a new <code>Activity</code>.\n   * Defines an Activity, a type of work, a function: input/outputs, instructions. An Activity is an action that can be executed within an engine. For example, for AutoCAD engine this might be plotting a DWG to PDF or update the CAD standards in a drawing file.\n   * @alias module:model/Activity\n   * @class\n   * @param commandLine {Array.<String>} Path to Engine executable with arguments.\n   * @param engine {String} The actual processing engine that runs the WorkItem job and processes the Activity.\n   */\n  constructor(commandLine, engine) {\n    this.commandLine = commandLine;\n    this.engine = engine;\n  }\n\n  /**\n   * Constructs a <code>Activity</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Activity} obj Optional instance to populate.\n   * @return {module:model/Activity} The populated <code>Activity</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new Activity();\n      if (data.hasOwnProperty('commandLine'))\n        obj.commandLine = AutodeskForgeDesignAutomationClient.convertToType(data['commandLine'], ['String']);\n      if (data.hasOwnProperty('parameters'))\n        obj.parameters = AutodeskForgeDesignAutomationClient.convertToType(data['parameters'], {'String': Parameter});\n      if (data.hasOwnProperty('id'))\n        obj.id = AutodeskForgeDesignAutomationClient.convertToType(data['id'], 'String');\n      if (data.hasOwnProperty('engine'))\n        obj.engine = AutodeskForgeDesignAutomationClient.convertToType(data['engine'], 'String');\n      if (data.hasOwnProperty('appbundles'))\n        obj.appbundles = AutodeskForgeDesignAutomationClient.convertToType(data['appbundles'], ['String']);\n      if (data.hasOwnProperty('settings'))\n        obj.settings = AutodeskForgeDesignAutomationClient.convertToType(data['settings'], {'String': Object});\n      if (data.hasOwnProperty('description'))\n        obj.description = AutodeskForgeDesignAutomationClient.convertToType(data['description'], 'String');\n      if (data.hasOwnProperty('version'))\n        obj.version = AutodeskForgeDesignAutomationClient.convertToType(data['version'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * Path to Engine executable with arguments.\n * @member {Array.<String>} commandLine\n */\nActivity.prototype.commandLine = undefined;\n\n/**\n * Each parameter represents an input or output file.\n * @member {Object.<String, module:model/Parameter>} parameters\n */\nActivity.prototype.parameters = undefined;\n\n/**\n * Name of Activity, see the example section.\n * @member {String} id\n */\nActivity.prototype.id = undefined;\n\n/**\n * The actual processing engine that runs the WorkItem job and processes the Activity.\n * @member {String} engine\n */\nActivity.prototype.engine = undefined;\n\n/**\n * A module referenced by an Activity in order to perform specific functions. Typically this is a DLL or some other form of custom code.\n * @member {Array.<String>} appbundles\n */\nActivity.prototype.appbundles = undefined;\n\n/**\n * The url/string Settings for a given set of AppBundles.\n * @member {Object.<String, module:model/ISetting>} settings\n */\nActivity.prototype.settings = undefined;\n\n/**\n * Human readable description of the object.\n * @member {String} description\n */\nActivity.prototype.description = undefined;\n\n/**\n * @member {Number} version\n */\nActivity.prototype.version = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The Alias model module.\n * @module model/Alias\n * @version 3.0.1\n */\nexport default class Alias {\n  /**\n   * Constructs a new <code>Alias</code>.\n   * \n   * @alias module:model/Alias\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>Alias</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Alias} obj Optional instance to populate.\n   * @return {module:model/Alias} The populated <code>Alias</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new Alias();\n      if (data.hasOwnProperty('version'))\n        obj.version = AutodeskForgeDesignAutomationClient.convertToType(data['version'], 'Number');\n      if (data.hasOwnProperty('receiver'))\n        obj.receiver = AutodeskForgeDesignAutomationClient.convertToType(data['receiver'], 'String');\n      if (data.hasOwnProperty('id'))\n        obj.id = AutodeskForgeDesignAutomationClient.convertToType(data['id'], 'String');\n    }\n    return obj;\n  }\n}\n\n/**\n * The version that this alias refers to.\n * @member {Number} version\n */\nAlias.prototype.version = undefined;\n\n/**\n * The user to share the alias with.\n * @member {String} receiver\n */\nAlias.prototype.receiver = undefined;\n\n/**\n * @member {String} id\n */\nAlias.prototype.id = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The AliasPatch model module.\n * @module model/AliasPatch\n * @version 3.0.1\n */\nexport default class AliasPatch {\n  /**\n   * Constructs a new <code>AliasPatch</code>.\n   * @alias module:model/AliasPatch\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>AliasPatch</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AliasPatch} obj Optional instance to populate.\n   * @return {module:model/AliasPatch} The populated <code>AliasPatch</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new AliasPatch();\n      if (data.hasOwnProperty('receiver'))\n        obj.receiver = AutodeskForgeDesignAutomationClient.convertToType(data['receiver'], 'String');\n      if (data.hasOwnProperty('version'))\n        obj.version = AutodeskForgeDesignAutomationClient.convertToType(data['version'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * The user to share the alias with.\n * @member {String} receiver\n */\nAliasPatch.prototype.receiver = undefined;\n\n/**\n * The version that this alias refers to.\n * @member {Number} version\n */\nAliasPatch.prototype.version = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The UploadAppBundleParameters model module.\n * @module model/UploadAppBundleParameters\n * @version 3.0.1\n */\nexport default class UploadAppBundleParameters {\n  /**\n   * Constructs a new <code>UploadAppBundleParameters</code>.\n   * \n   * @alias module:model/UploadAppBundleParameters\n   * @class\n   * @param endpointURL {String} The URL to upload the AppBundle package to.\n   * @param formData {Object.<String, String>} FormData parameters to be used in the body of the AppBundle package upload request. Must be followed by a 'file' parameter indicating the package file location.\n   */\n  constructor(endpointURL, formData) {\n    this.endpointURL = endpointURL;\n    this.formData = formData;\n  }\n\n  /**\n   * Constructs a <code>UploadAppBundleParameters</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/UploadAppBundleParameters} obj Optional instance to populate.\n   * @return {module:model/UploadAppBundleParameters} The populated <code>UploadAppBundleParameters</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new UploadAppBundleParameters();\n      if (data.hasOwnProperty('endpointURL'))\n        obj.endpointURL = AutodeskForgeDesignAutomationClient.convertToType(data['endpointURL'], 'String');\n      if (data.hasOwnProperty('formData'))\n        obj.formData = AutodeskForgeDesignAutomationClient.convertToType(data['formData'], {'String': 'String'});\n    }\n    return obj;\n  }\n}\n\n/**\n * The URL to upload the AppBundle package to.\n * @member {String} endpointURL\n */\nUploadAppBundleParameters.prototype.endpointURL = undefined;\n\n/**\n * FormData parameters to be used in the body of the AppBundle package upload request. Must be followed by a 'file' parameter indicating the package file location.\n * @member {Object.<String, String>} formData\n */\nUploadAppBundleParameters.prototype.formData = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport ISetting from './ISetting';\nimport UploadAppBundleParameters from './UploadAppBundleParameters';\n\n\n/**\n * The AppBundle model module.\n * @module model/AppBundle\n * @version 3.0.1\n */\nexport default class AppBundle {\n  /**\n   * Constructs a new <code>AppBundle</code>.\n   * An AppBundle is a module that is used by an Activity in order to perform a particular action.\n   * @alias module:model/AppBundle\n   * @class\n   * @param engine {String} The actual processing engine that runs the WorkItem job and processes the Activity.\n   */\n  constructor(engine) {\n    this.engine = engine;\n  }\n\n  /**\n   * Constructs a <code>AppBundle</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AppBundle} obj Optional instance to populate.\n   * @return {module:model/AppBundle} The populated <code>AppBundle</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new AppBundle();\n      if (data.hasOwnProperty('package'))\n        obj.package = AutodeskForgeDesignAutomationClient.convertToType(data['package'], 'String');\n      if (data.hasOwnProperty('uploadParameters'))\n        obj.uploadParameters = UploadAppBundleParameters.constructFromObject(data['uploadParameters']);\n      if (data.hasOwnProperty('id'))\n        obj.id = AutodeskForgeDesignAutomationClient.convertToType(data['id'], 'String');\n      if (data.hasOwnProperty('engine'))\n        obj.engine = AutodeskForgeDesignAutomationClient.convertToType(data['engine'], 'String');\n      if (data.hasOwnProperty('appbundles'))\n        obj.appbundles = AutodeskForgeDesignAutomationClient.convertToType(data['appbundles'], ['String']);\n      if (data.hasOwnProperty('settings'))\n        obj.settings = AutodeskForgeDesignAutomationClient.convertToType(data['settings'], {'String': Object});\n      if (data.hasOwnProperty('description'))\n        obj.description = AutodeskForgeDesignAutomationClient.convertToType(data['description'], 'String');\n      if (data.hasOwnProperty('version'))\n        obj.version = AutodeskForgeDesignAutomationClient.convertToType(data['version'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * The URL that points to the zip package for the AppBundle or Engine.\n * @member {String} package\n */\nAppBundle.prototype.package = undefined;\n\n/**\n * The parameters needed to POST an AppBundle.\n * @member {module:model/UploadAppBundleParameters} uploadParameters\n */\nAppBundle.prototype.uploadParameters = undefined;\n\n/**\n * Name of AppBundle, see the example section.\n * @member {String} id\n */\nAppBundle.prototype.id = undefined;\n\n/**\n * The actual processing engine that runs the WorkItem job and processes the Activity.\n * @member {String} engine\n */\nAppBundle.prototype.engine = undefined;\n\n/**\n * A module referenced by an Activity in order to perform specific functions. Typically this is a DLL or some other form of custom code.\n * @member {Array.<String>} appbundles\n */\nAppBundle.prototype.appbundles = undefined;\n\n/**\n * The url/string Settings for a given set of AppBundles.\n * @member {Object.<String, module:model/ISetting>} settings\n */\nAppBundle.prototype.settings = undefined;\n\n/**\n * Human readable description of the object.\n * @member {String} description\n */\nAppBundle.prototype.description = undefined;\n\n/**\n * @member {Number} version\n */\nAppBundle.prototype.version = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The BackendLimits model module.\n * @module model/BackendLimits\n * @version 3.0.1\n */\nexport default class BackendLimits {\n  /**\n   * Constructs a new <code>BackendLimits</code>.\n   * Helper class used in the following property.\n   * @alias module:model/BackendLimits\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>BackendLimits</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/BackendLimits} obj Optional instance to populate.\n   * @return {module:model/BackendLimits} The populated <code>BackendLimits</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new BackendLimits();\n      if (data.hasOwnProperty('limitDownloads'))\n        obj.limitDownloads = AutodeskForgeDesignAutomationClient.convertToType(data['limitDownloads'], 'Number');\n      if (data.hasOwnProperty('limitUploads'))\n        obj.limitUploads = AutodeskForgeDesignAutomationClient.convertToType(data['limitUploads'], 'Number');\n      if (data.hasOwnProperty('limitDownloadSizeMB'))\n        obj.limitDownloadSizeMB = AutodeskForgeDesignAutomationClient.convertToType(data['limitDownloadSizeMB'], 'Number');\n      if (data.hasOwnProperty('limitUploadSizeMB'))\n        obj.limitUploadSizeMB = AutodeskForgeDesignAutomationClient.convertToType(data['limitUploadSizeMB'], 'Number');\n      if (data.hasOwnProperty('limitProcessingTimeSec'))\n        obj.limitProcessingTimeSec = AutodeskForgeDesignAutomationClient.convertToType(data['limitProcessingTimeSec'], 'Number');\n      if (data.hasOwnProperty('limitTotalUncompressedAppsSizeInMB'))\n        obj.limitTotalUncompressedAppsSizeInMB = AutodeskForgeDesignAutomationClient.convertToType(data['limitTotalUncompressedAppsSizeInMB'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * Max number of downloads per workitem.\n * @member {Number} limitDownloads\n */\nBackendLimits.prototype.limitDownloads = undefined;\n\n/**\n * Max number of uploads per workitem.\n * @member {Number} limitUploads\n */\nBackendLimits.prototype.limitUploads = undefined;\n\n/**\n * Max total size of all downloads in MB per workitem.\n * @member {Number} limitDownloadSizeMB\n */\nBackendLimits.prototype.limitDownloadSizeMB = undefined;\n\n/**\n * Max total size of all uploads in MB per workitem.\n * @member {Number} limitUploadSizeMB\n */\nBackendLimits.prototype.limitUploadSizeMB = undefined;\n\n/**\n * Max duration of processing in seconds per workitem (includes download and upload time).\n * @member {Number} limitProcessingTimeSec\n */\nBackendLimits.prototype.limitProcessingTimeSec = undefined;\n\n/**\n * Max permitted size of all Apps referenced by an activity. It is enforced when you post a workitem. Default is 500.\n * @member {Number} limitTotalUncompressedAppsSizeInMB\n */\nBackendLimits.prototype.limitTotalUncompressedAppsSizeInMB = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n* Enum class Engine.\n* @enum {}\n* @readonly\n*/\nexport default class Engine {\n    \n        /**\n         * value: \"api\"\n         * @static\n         */\n        static get \"api\" () { return \"api\"; }\n\n    \n        /**\n         * value: \"AutoCAD\"\n         * @static\n         */\n        static get \"AutoCAD\" () { return \"AutoCAD\"; }\n\n    \n        /**\n         * value: \"Revit\"\n         * @static\n         */\n        static get \"Revit\" () { return \"Revit\"; }\n\n    \n        /**\n         * value: \"Inventor\"\n         * @static\n         */\n        static get \"Inventor\" () { return \"Inventor\"; }\n\n    \n        /**\n         * value: \"3dsMax\"\n         * @static\n         */\n        static get \"3dsMax\" () { return \"3dsMax\"; }\n\n    \n        /**\n         * value: \"Test\"\n         * @static\n         */\n        static get \"Test\" () { return \"Test\"; }\n\n    \n\n    /**\n    * Returns a <code>Engine</code> enum value from a Javascript object name.\n    * @param {Object} data The plain JavaScript object containing the name of the enum value.\n    * @return {module:model/Engine} The enum <code>Engine</code> value.\n    */\n    static constructFromObject(object) {\n        return object;\n    }\n    \n}\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The FrontendLimits model module.\n * @module model/FrontendLimits\n * @version 3.0.1\n */\nexport default class FrontendLimits {\n  /**\n   * Constructs a new <code>FrontendLimits</code>.\n   * Limits enforced by the frontend.\n   * @alias module:model/FrontendLimits\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>FrontendLimits</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/FrontendLimits} obj Optional instance to populate.\n   * @return {module:model/FrontendLimits} The populated <code>FrontendLimits</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new FrontendLimits();\n      if (data.hasOwnProperty('limitPayloadSizeInKB'))\n        obj.limitPayloadSizeInKB = AutodeskForgeDesignAutomationClient.convertToType(data['limitPayloadSizeInKB'], 'Number');\n      if (data.hasOwnProperty('limitVersions'))\n        obj.limitVersions = AutodeskForgeDesignAutomationClient.convertToType(data['limitVersions'], 'Number');\n      if (data.hasOwnProperty('limitAliases'))\n        obj.limitAliases = AutodeskForgeDesignAutomationClient.convertToType(data['limitAliases'], 'Number');\n      if (data.hasOwnProperty('limitPublicAliases'))\n        obj.limitPublicAliases = AutodeskForgeDesignAutomationClient.convertToType(data['limitPublicAliases'], 'Number');\n      if (data.hasOwnProperty('limitAppUploadSizeInMB'))\n        obj.limitAppUploadSizeInMB = AutodeskForgeDesignAutomationClient.convertToType(data['limitAppUploadSizeInMB'], 'Number');\n      if (data.hasOwnProperty('limitMonthlyProcessingTimeInHours'))\n        obj.limitMonthlyProcessingTimeInHours = AutodeskForgeDesignAutomationClient.convertToType(data['limitMonthlyProcessingTimeInHours'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * Max permitted size for App/Activity/Workitem json payload in kilobytes. Default is 16KB.\n * @member {Number} limitPayloadSizeInKB\n */\nFrontendLimits.prototype.limitPayloadSizeInKB = undefined;\n\n/**\n * Max permitted number of App/Activity versions a client can have at any one time. Default is 100.\n * @member {Number} limitVersions\n */\nFrontendLimits.prototype.limitVersions = undefined;\n\n/**\n * Max permitted number of aliases that a client can have at any one time. Default is 100.\n * @member {Number} limitAliases\n */\nFrontendLimits.prototype.limitAliases = undefined;\n\n/**\n * Max permitted number of public aliases that a client can have at any one time. Default is 0.\n * @member {Number} limitPublicAliases\n */\nFrontendLimits.prototype.limitPublicAliases = undefined;\n\n/**\n * Max permitted size of an App upload in megabytes.\n * @member {Number} limitAppUploadSizeInMB\n */\nFrontendLimits.prototype.limitAppUploadSizeInMB = undefined;\n\n/**\n * Max commulative engine usage by client in a given calendar month. This limit applies to all engines. For example, if the limit is set to 1 hour then 30 minutes of Revit usage and 30 minutes of Inventor usage will reach limit.\n * @member {Number} limitMonthlyProcessingTimeInHours\n */\nFrontendLimits.prototype.limitMonthlyProcessingTimeInHours = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The IArgument model module.\n * @module model/IArgument\n * @version 3.0.1\n */\nexport default class IArgument {\n  /**\n   * Constructs a new <code>IArgument</code>.\n   * This interface must be implemented by all workitem arguments.\n   * @alias module:model/IArgument\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>IArgument</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/IArgument} obj Optional instance to populate.\n   * @return {module:model/IArgument} The populated <code>IArgument</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new IArgument();\n    }\n    return obj;\n  }\n}\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The PublicKey model module.\n * @module model/PublicKey\n * @version 3.0.1\n */\nexport default class PublicKey {\n  /**\n   * Constructs a new <code>PublicKey</code>.\n   * @alias module:model/PublicKey\n   * @class\n   * @param exponent {Blob} \n   * @param modulus {Blob} \n   */\n  constructor(exponent, modulus) {\n    this.exponent = exponent;\n    this.modulus = modulus;\n  }\n\n  /**\n   * Constructs a <code>PublicKey</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PublicKey} obj Optional instance to populate.\n   * @return {module:model/PublicKey} The populated <code>PublicKey</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new PublicKey();\n      if (data.hasOwnProperty('Exponent'))\n        obj.exponent = AutodeskForgeDesignAutomationClient.convertToType(data['Exponent'], 'Blob');\n      if (data.hasOwnProperty('Modulus'))\n        obj.modulus = AutodeskForgeDesignAutomationClient.convertToType(data['Modulus'], 'Blob');\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {Blob} exponent\n */\nPublicKey.prototype.exponent = undefined;\n\n/**\n * @member {Blob} modulus\n */\nPublicKey.prototype.modulus = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport PublicKey from './PublicKey';\n\n\n/**\n * The NicknameRecord model module.\n * @module model/NicknameRecord\n * @version 3.0.1\n */\nexport default class NicknameRecord {\n  /**\n   * Constructs a new <code>NicknameRecord</code>.\n   * ( response only ).\n   * @alias module:model/NicknameRecord\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>NicknameRecord</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/NicknameRecord} obj Optional instance to populate.\n   * @return {module:model/NicknameRecord} The populated <code>NicknameRecord</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new NicknameRecord();\n      if (data.hasOwnProperty('nickname'))\n        obj.nickname = AutodeskForgeDesignAutomationClient.convertToType(data['nickname'], 'String');\n      if (data.hasOwnProperty('publicKey'))\n        obj.publicKey = PublicKey.constructFromObject(data['publicKey']);\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} nickname\n */\nNicknameRecord.prototype.nickname = undefined;\n\n/**\n * @member {module:model/PublicKey} publicKey\n */\nNicknameRecord.prototype.publicKey = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport Alias from './Alias';\n\n\n/**\n * The PageAlias model module.\n * @module model/PageAlias\n * @version 3.0.1\n */\nexport default class PageAlias {\n  /**\n   * Constructs a new <code>PageAlias</code>.\n   * @alias module:model/PageAlias\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>PageAlias</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PageAlias} obj Optional instance to populate.\n   * @return {module:model/PageAlias} The populated <code>PageAlias</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new PageAlias();\n      if (data.hasOwnProperty('paginationToken'))\n        obj.paginationToken = AutodeskForgeDesignAutomationClient.convertToType(data['paginationToken'], 'String');\n      if (data.hasOwnProperty('data'))\n        obj.data = AutodeskForgeDesignAutomationClient.convertToType(data['data'], [Alias]);\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} paginationToken\n */\nPageAlias.prototype.paginationToken = undefined;\n\n/**\n * @member {Array.<module:model/Alias>} data\n */\nPageAlias.prototype.data = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The PageInt32 model module.\n * @module model/PageInt32\n * @version 3.0.1\n */\nexport default class PageInt32 {\n  /**\n   * Constructs a new <code>PageInt32</code>.\n   * @alias module:model/PageInt32\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>PageInt32</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PageInt32} obj Optional instance to populate.\n   * @return {module:model/PageInt32} The populated <code>PageInt32</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new PageInt32();\n      if (data.hasOwnProperty('paginationToken'))\n        obj.paginationToken = AutodeskForgeDesignAutomationClient.convertToType(data['paginationToken'], 'String');\n      if (data.hasOwnProperty('data'))\n        obj.data = AutodeskForgeDesignAutomationClient.convertToType(data['data'], ['Number']);\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} paginationToken\n */\nPageInt32.prototype.paginationToken = undefined;\n\n/**\n * @member {Array.<Number>} data\n */\nPageInt32.prototype.data = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n* Enum class ShareType.\n* @enum {}\n* @readonly\n*/\nexport default class ShareType {\n    \n        /**\n         * value: \"activity\"\n         * @static\n         */\n        static get \"activity\" () { return \"activity\"; }\n\n    \n        /**\n         * value: \"app\"\n         * @static\n         */\n        static get \"app\" () { return \"app\"; }\n\n    \n\n    /**\n    * Returns a <code>ShareType</code> enum value from a Javascript object name.\n    * @param {Object} data The plain JavaScript object containing the name of the enum value.\n    * @return {module:model/ShareType} The enum <code>ShareType</code> value.\n    */\n    static constructFromObject(object) {\n        return object;\n    }\n    \n}\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport ShareType from './ShareType';\n\n\n/**\n * The Share model module.\n * @module model/Share\n * @version 3.0.1\n */\nexport default class Share {\n  /**\n   * Constructs a new <code>Share</code>.\n   * ( response only ).\n   * @alias module:model/Share\n   * @class\n   * @param id {String} The name alias id with the owner stripped ex: CoolApp+Prod.\n   * @param receiver {String} The Receiver of the shared alias.\n   * @param type {module:model/ShareType} The type of the share (\\\"Activity\\\", \\\"App\\\",).\n   */\n  constructor(id, receiver, type) {\n    this.id = id;\n    this.receiver = receiver;\n    this.type = type;\n  }\n\n  /**\n   * Constructs a <code>Share</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Share} obj Optional instance to populate.\n   * @return {module:model/Share} The populated <code>Share</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new Share();\n      if (data.hasOwnProperty('id'))\n        obj.id = AutodeskForgeDesignAutomationClient.convertToType(data['id'], 'String');\n      if (data.hasOwnProperty('receiver'))\n        obj.receiver = AutodeskForgeDesignAutomationClient.convertToType(data['receiver'], 'String');\n      if (data.hasOwnProperty('type'))\n        obj.type = ShareType.constructFromObject(data['type']);\n    }\n    return obj;\n  }\n}\n\n/**\n * The name alias id with the owner stripped ex: CoolApp+Prod.\n * @member {String} id\n */\nShare.prototype.id = undefined;\n\n/**\n * The Receiver of the shared alias.\n * @member {String} receiver\n */\nShare.prototype.receiver = undefined;\n\n/**\n * The type of the share (\\\"Activity\\\", \\\"App\\\",).\n * @member {module:model/ShareType} type\n */\nShare.prototype.type = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport Share from './Share';\n\n\n/**\n * The PageShare model module.\n * @module model/PageShare\n * @version 3.0.1\n */\nexport default class PageShare {\n  /**\n   * Constructs a new <code>PageShare</code>.\n   * @alias module:model/PageShare\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>PageShare</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PageShare} obj Optional instance to populate.\n   * @return {module:model/PageShare} The populated <code>PageShare</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new PageShare();\n      if (data.hasOwnProperty('paginationToken'))\n        obj.paginationToken = AutodeskForgeDesignAutomationClient.convertToType(data['paginationToken'], 'String');\n      if (data.hasOwnProperty('data'))\n        obj.data = AutodeskForgeDesignAutomationClient.convertToType(data['data'], [Share]);\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} paginationToken\n */\nPageShare.prototype.paginationToken = undefined;\n\n/**\n * @member {Array.<module:model/Share>} data\n */\nPageShare.prototype.data = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The PageString model module.\n * @module model/PageString\n * @version 3.0.1\n */\nexport default class PageString {\n  /**\n   * Constructs a new <code>PageString</code>.\n   * @alias module:model/PageString\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>PageString</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PageString} obj Optional instance to populate.\n   * @return {module:model/PageString} The populated <code>PageString</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new PageString();\n      if (data.hasOwnProperty('paginationToken'))\n        obj.paginationToken = AutodeskForgeDesignAutomationClient.convertToType(data['paginationToken'], 'String');\n      if (data.hasOwnProperty('data'))\n        obj.data = AutodeskForgeDesignAutomationClient.convertToType(data['data'], ['String']);\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} paginationToken\n */\nPageString.prototype.paginationToken = undefined;\n\n/**\n * @member {Array.<String>} data\n */\nPageString.prototype.data = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport BackendLimits from './BackendLimits';\nimport FrontendLimits from './FrontendLimits';\n\n\n/**\n * The ServiceLimit model module.\n * @module model/ServiceLimit\n * @version 3.0.1\n */\nexport default class ServiceLimit {\n  /**\n   * Constructs a new <code>ServiceLimit</code>.\n   * Represents the service limits for a user.\n   * @alias module:model/ServiceLimit\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>ServiceLimit</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ServiceLimit} obj Optional instance to populate.\n   * @return {module:model/ServiceLimit} The populated <code>ServiceLimit</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new ServiceLimit();\n      if (data.hasOwnProperty('frontendLimits'))\n        obj.frontendLimits = FrontendLimits.constructFromObject(data['frontendLimits']);\n      if (data.hasOwnProperty('backendLimits'))\n        obj.backendLimits = AutodeskForgeDesignAutomationClient.convertToType(data['backendLimits'], {'String': BackendLimits});\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {module:model/FrontendLimits} frontendLimits\n */\nServiceLimit.prototype.frontendLimits = undefined;\n\n/**\n * @member {Object.<String, module:model/BackendLimits>} backendLimits\n */\nServiceLimit.prototype.backendLimits = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The SignedUrl model module.\n * @module model/SignedUrl\n * @version 3.0.1\n */\nexport default class SignedUrl {\n  /**\n   * Constructs a new <code>SignedUrl</code>.\n   * A digitally signed url.\n   * @alias module:model/SignedUrl\n   * @class\n   * @param url {String} The Url value.\n   * @param signature {String} The signature calculated for Url.\n   */\n  constructor(url, signature) {\n    this.url = url;\n    this.signature = signature;\n  }\n\n  /**\n   * Constructs a <code>SignedUrl</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/SignedUrl} obj Optional instance to populate.\n   * @return {module:model/SignedUrl} The populated <code>SignedUrl</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new SignedUrl();\n      if (data.hasOwnProperty('url'))\n        obj.url = AutodeskForgeDesignAutomationClient.convertToType(data['url'], 'String');\n      if (data.hasOwnProperty('signature'))\n        obj.signature = AutodeskForgeDesignAutomationClient.convertToType(data['signature'], 'String');\n    }\n    return obj;\n  }\n}\n\n/**\n * The Url value.\n * @member {String} url\n */\nSignedUrl.prototype.url = undefined;\n\n/**\n * The signature calculated for Url.\n * @member {String} signature\n */\nSignedUrl.prototype.signature = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n * The Statistics model module.\n * @module model/Statistics\n * @version 3.0.1\n */\nexport default class Statistics {\n  /**\n   * Constructs a new <code>Statistics</code>.\n   * @alias module:model/Statistics\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>Statistics</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Statistics} obj Optional instance to populate.\n   * @return {module:model/Statistics} The populated <code>Statistics</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new Statistics();\n      if (data.hasOwnProperty('timeQueued'))\n        obj.timeQueued = AutodeskForgeDesignAutomationClient.convertToType(data['timeQueued'], 'Date');\n      if (data.hasOwnProperty('timeDownloadStarted'))\n        obj.timeDownloadStarted = AutodeskForgeDesignAutomationClient.convertToType(data['timeDownloadStarted'], 'Date');\n      if (data.hasOwnProperty('timeInstructionsStarted'))\n        obj.timeInstructionsStarted = AutodeskForgeDesignAutomationClient.convertToType(data['timeInstructionsStarted'], 'Date');\n      if (data.hasOwnProperty('timeInstructionsEnded'))\n        obj.timeInstructionsEnded = AutodeskForgeDesignAutomationClient.convertToType(data['timeInstructionsEnded'], 'Date');\n      if (data.hasOwnProperty('timeUploadEnded'))\n        obj.timeUploadEnded = AutodeskForgeDesignAutomationClient.convertToType(data['timeUploadEnded'], 'Date');\n      if (data.hasOwnProperty('timeFinished'))\n        obj.timeFinished = AutodeskForgeDesignAutomationClient.convertToType(data['timeFinished'], 'Date');\n      if (data.hasOwnProperty('bytesDownloaded'))\n        obj.bytesDownloaded = AutodeskForgeDesignAutomationClient.convertToType(data['bytesDownloaded'], 'Number');\n      if (data.hasOwnProperty('bytesUploaded'))\n        obj.bytesUploaded = AutodeskForgeDesignAutomationClient.convertToType(data['bytesUploaded'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * The time in UTC when the workitem was queued.\n * @member {Date} timeQueued\n */\nStatistics.prototype.timeQueued = undefined;\n\n/**\n * The time in UTC when the system started processing the workitem by transferring input data to the processing node.\n * @member {Date} timeDownloadStarted\n */\nStatistics.prototype.timeDownloadStarted = undefined;\n\n/**\n * The time in UTC when the system finished downloading input and started processing instructions from the Activity associated with this workitem.\n * @member {Date} timeInstructionsStarted\n */\nStatistics.prototype.timeInstructionsStarted = undefined;\n\n/**\n * The time in UTC when the system finished executing instructions and started uploading outputs.\n * @member {Date} timeInstructionsEnded\n */\nStatistics.prototype.timeInstructionsEnded = undefined;\n\n/**\n * The time in UTC when the system finished uploading outputs.\n * @member {Date} timeUploadEnded\n */\nStatistics.prototype.timeUploadEnded = undefined;\n\n/**\n * The time in UTC when the system finished the workitem and reported the status.\n * @member {Date} timeFinished\n */\nStatistics.prototype.timeFinished = undefined;\n\n/**\n * The file size of bytes the job downloads for input.\n * @member {Number} bytesDownloaded\n */\nStatistics.prototype.bytesDownloaded = undefined;\n\n/**\n * The file size of bytes the job uploads for output.\n * @member {Number} bytesUploaded\n */\nStatistics.prototype.bytesUploaded = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\n\n\n/**\n* Enum class Status.\n* @enum {}\n* @readonly\n*/\nexport default class Status {\n    \n        /**\n         * value: \"pending\"\n         * @static\n         */\n        static get \"pending\" () { return \"pending\"; }\n\n    \n        /**\n         * value: \"inprogress\"\n         * @static\n         */\n        static get \"inprogress\" () { return \"inprogress\"; }\n\n    \n        /**\n         * value: \"cancelled\"\n         * @static\n         */\n        static get \"cancelled\" () { return \"cancelled\"; }\n\n    \n        /**\n         * value: \"failedLimitDataSize\"\n         * @static\n         */\n        static get \"failedLimitDataSize\" () { return \"failedLimitDataSize\"; }\n\n    \n        /**\n         * value: \"failedLimitProcessingTime\"\n         * @static\n         */\n        static get \"failedLimitProcessingTime\" () { return \"failedLimitProcessingTime\"; }\n\n    \n        /**\n         * value: \"failedDownload\"\n         * @static\n         */\n        static get \"failedDownload\" () { return \"failedDownload\"; }\n\n    \n        /**\n         * value: \"failedInstructions\"\n         * @static\n         */\n        static get \"failedInstructions\" () { return \"failedInstructions\"; }\n\n    \n        /**\n         * value: \"failedUpload\"\n         * @static\n         */\n        static get \"failedUpload\" () { return \"failedUpload\"; }\n\n    \n        /**\n         * value: \"success\"\n         * @static\n         */\n        static get \"success\" () { return \"success\"; }\n\n    \n\n    /**\n    * Returns a <code>Status</code> enum value from a Javascript object name.\n    * @param {Object} data The plain JavaScript object containing the name of the enum value.\n    * @return {module:model/Status} The enum <code>Status</code> value.\n    */\n    static constructFromObject(object) {\n        return object;\n    }\n    \n}\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport SignedUrl from './SignedUrl';\n\n\n/**\n * The WorkItemSignatures model module.\n * @module model/WorkItemSignatures\n * @version 3.0.1\n */\nexport default class WorkItemSignatures {\n  /**\n   * Constructs a new <code>WorkItemSignatures</code>.\n   * Signatures for various attributes in WorkItem.\n   * @alias module:model/WorkItemSignatures\n   * @class\n   */\n  constructor() {\n  }\n\n  /**\n   * Constructs a <code>WorkItemSignatures</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/WorkItemSignatures} obj Optional instance to populate.\n   * @return {module:model/WorkItemSignatures} The populated <code>WorkItemSignatures</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new WorkItemSignatures();\n      if (data.hasOwnProperty('activityId'))\n        obj.activityId = AutodeskForgeDesignAutomationClient.convertToType(data['activityId'], 'String');\n      if (data.hasOwnProperty('baseUrls'))\n        obj.baseUrls = AutodeskForgeDesignAutomationClient.convertToType(data['baseUrls'], [SignedUrl]);\n    }\n    return obj;\n  }\n}\n\n/**\n * Digital signature of the ActivityId. The client must supply this when using a 2-legged oauth token for submitting a WorkItem.\n * @member {String} activityId\n */\nWorkItemSignatures.prototype.activityId = undefined;\n\n/**\n * Digitally signed base urls that are allowed in the WorkItem. The client may supply these when using a 2-legged oauth token for submitting a WorkItem.\n * @member {Array.<module:model/SignedUrl>} baseUrls\n */\nWorkItemSignatures.prototype.baseUrls = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport IArgument from './IArgument';\nimport WorkItemSignatures from './WorkItemSignatures';\n\n\n/**\n * The WorkItem model module.\n * @module model/WorkItem\n * @version 3.0.1\n */\nexport default class WorkItem {\n  /**\n   * Constructs a new <code>WorkItem</code>.\n   * A WorkItem is a specification of the processing job for an Activity, and it is submitted to and executed by an Engine. Note that a WorkItem cannot be modified after it has been created. ( request only ).\n   * @alias module:model/WorkItem\n   * @class\n   * @param activityId {String} Reference to the Activity that this WorkItem will invoke.  Examples: `MyPlot+Prod` (an Activity created by the caller) or  `Autodesk.PlotToPdf` (an Activity created by someone else and shared with this caller).\n   */\n  constructor(activityId) {\n    this.activityId = activityId;\n  }\n\n  /**\n   * Constructs a <code>WorkItem</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/WorkItem} obj Optional instance to populate.\n   * @return {module:model/WorkItem} The populated <code>WorkItem</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new WorkItem();\n      if (data.hasOwnProperty('id'))\n        obj.id = AutodeskForgeDesignAutomationClient.convertToType(data['id'], 'String');\n      if (data.hasOwnProperty('activityId'))\n        obj.activityId = AutodeskForgeDesignAutomationClient.convertToType(data['activityId'], 'String');\n      if (data.hasOwnProperty('arguments'))\n        obj.arguments = AutodeskForgeDesignAutomationClient.convertToType(data['arguments'], {'String': Object});\n      if (data.hasOwnProperty('signatures'))\n        obj.signatures = WorkItemSignatures.constructFromObject(data['signatures']);\n      if (data.hasOwnProperty('limitProcessingTimeSec'))\n        obj.limitProcessingTimeSec = AutodeskForgeDesignAutomationClient.convertToType(data['limitProcessingTimeSec'], 'Number');\n    }\n    return obj;\n  }\n}\n\n/**\n * Id.\n * @member {String} id\n */\nWorkItem.prototype.id = undefined;\n\n/**\n * Reference to the Activity that this WorkItem will invoke.  Examples: `MyPlot+Prod` (an Activity created by the caller) or  `Autodesk.PlotToPdf` (an Activity created by someone else and shared with this caller).\n * @member {String} activityId\n */\nWorkItem.prototype.activityId = undefined;\n\n/**\n * Arguments of the WorkItem.\n * @member {Object.<String, module:model/IArgument>} arguments\n */\nWorkItem.prototype.arguments = undefined;\n\n/**\n * Signatures for various WorkItem attributes.\n * @member {module:model/WorkItemSignatures} signatures\n */\nWorkItem.prototype.signatures = undefined;\n\n/**\n * Max duration of processing in seconds per workitem (includes download and upload time).\n * @member {Number} limitProcessingTimeSec\n */\nWorkItem.prototype.limitProcessingTimeSec = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport Statistics from './Statistics';\nimport Status from './Status';\n\n\n/**\n * The WorkItemStatus model module.\n * @module model/WorkItemStatus\n * @version 3.0.1\n */\nexport default class WorkItemStatus {\n  /**\n   * Constructs a new <code>WorkItemStatus</code>.\n   * \n   * @alias module:model/WorkItemStatus\n   * @class\n   * @param status {module:model/Status} The current status of the workitem.\n   */\n  constructor(status) {\n    this.status = status;\n  }\n\n  /**\n   * Constructs a <code>WorkItemStatus</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/WorkItemStatus} obj Optional instance to populate.\n   * @return {module:model/WorkItemStatus} The populated <code>WorkItemStatus</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new WorkItemStatus();\n      if (data.hasOwnProperty('status'))\n        obj.status = Status.constructFromObject(data['status']);\n      if (data.hasOwnProperty('progress'))\n        obj.progress = AutodeskForgeDesignAutomationClient.convertToType(data['progress'], 'String');\n      if (data.hasOwnProperty('reportUrl'))\n        obj.reportUrl = AutodeskForgeDesignAutomationClient.convertToType(data['reportUrl'], 'String');\n      if (data.hasOwnProperty('stats'))\n        obj.stats = Statistics.constructFromObject(data['stats']);\n      if (data.hasOwnProperty('id'))\n        obj.id = AutodeskForgeDesignAutomationClient.convertToType(data['id'], 'String');\n    }\n    return obj;\n  }\n}\n\n/**\n * The current status of the workitem.\n * @member {module:model/Status} status\n */\nWorkItemStatus.prototype.status = undefined;\n\n/**\n * The current status of the workitem.\n * @member {String} progress\n */\nWorkItemStatus.prototype.progress = undefined;\n\n/**\n * The detailed report about the workitem, report url is valid for 24 hours from first receiving it.\n * @member {String} reportUrl\n */\nWorkItemStatus.prototype.reportUrl = undefined;\n\n/**\n * Basic statistics about workitem processing.\n * @member {module:model/Statistics} stats\n */\nWorkItemStatus.prototype.stats = undefined;\n\n/**\n * @member {String} id\n */\nWorkItemStatus.prototype.id = undefined;\n\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport IArgument from './IArgument';\n\n\n/**\n * The StringArgument model module.\n * @module model/StringArgument\n * @version 3.0.1\n */\nexport default class StringArgument {\n  /**\n   * Constructs a new <code>StringArgument</code>.\n   * @alias module:model/StringArgument\n   * @class\n   * @implements module:model/IArgument\n   */\n  constructor() {\n    IArgument.call(this);\n  }\n\n  /**\n   * Constructs a <code>StringArgument</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StringArgument} obj Optional instance to populate.\n   * @return {module:model/StringArgument} The populated <code>StringArgument</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new StringArgument();\n      IArgument.constructFromObject(data, obj);\n      if (data.hasOwnProperty('value'))\n        obj.value = AutodeskForgeDesignAutomationClient.convertToType(data['value'], 'String');\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} value\n */\nStringArgument.prototype.value = undefined;\n\n// Implement IArgument interface:\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport ISetting from './ISetting';\n\n\n/**\n * The StringSetting model module.\n * @module model/StringSetting\n * @version 3.0.1\n */\nexport default class StringSetting {\n  /**\n   * Constructs a new <code>StringSetting</code>.\n   * @alias module:model/StringSetting\n   * @class\n   * @implements module:model/ISetting\n   */\n  constructor() {\n    ISetting.call(this);\n  }\n\n  /**\n   * Constructs a <code>StringSetting</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StringSetting} obj Optional instance to populate.\n   * @return {module:model/StringSetting} The populated <code>StringSetting</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new StringSetting();\n      ISetting.constructFromObject(data, obj);\n      if (data.hasOwnProperty('value'))\n        obj.value = AutodeskForgeDesignAutomationClient.convertToType(data['value'], 'String');\n      if (data.hasOwnProperty('isEnvironmentVariable'))\n        obj.isEnvironmentVariable = AutodeskForgeDesignAutomationClient.convertToType(data['isEnvironmentVariable'], 'Boolean');\n    }\n    return obj;\n  }\n}\n\n/**\n * @member {String} value\n */\nStringSetting.prototype.value = undefined;\n\n/**\n * @member {Boolean} isEnvironmentVariable\n * @default false\n */\nStringSetting.prototype.isEnvironmentVariable = false;\n\n// Implement ISetting interface:\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport ISetting from './ISetting';\nimport Verb from './Verb';\n\n\n/**\n * The UrlSetting model module.\n * @module model/UrlSetting\n * @version 3.0.1\n */\nexport default class UrlSetting {\n  /**\n   * Constructs a new <code>UrlSetting</code>.\n   * @alias module:model/UrlSetting\n   * @class\n   * @implements module:model/ISetting\n   * @param url {String} Url.\n   */\n  constructor(url) {\n    ISetting.call(this);\n    this.url = url;\n  }\n\n  /**\n   * Constructs a <code>UrlSetting</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/UrlSetting} obj Optional instance to populate.\n   * @return {module:model/UrlSetting} The populated <code>UrlSetting</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new UrlSetting();\n      ISetting.constructFromObject(data, obj);\n      if (data.hasOwnProperty('url'))\n        obj.url = AutodeskForgeDesignAutomationClient.convertToType(data['url'], 'String');\n      if (data.hasOwnProperty('headers'))\n        obj.headers = AutodeskForgeDesignAutomationClient.convertToType(data['headers'], {'String': 'String'});\n      if (data.hasOwnProperty('verb'))\n        obj.verb = Verb.constructFromObject(data['verb']);\n    }\n    return obj;\n  }\n}\n\n/**\n * Url.\n * @member {String} url\n */\nUrlSetting.prototype.url = undefined;\n\n/**\n * Headers.\n * @member {Object.<String, String>} headers\n */\nUrlSetting.prototype.headers = undefined;\n\n/**\n * The HTTP verb to be used.\n * @member {module:model/Verb} verb\n */\nUrlSetting.prototype.verb = undefined;\n\n// Implement ISetting interface:\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from '../AutodeskForgeDesignAutomationClient';\nimport IArgument from './IArgument';\nimport Verb from './Verb';\n\n\n/**\n * The XrefTreeArgument model module.\n * @module model/XrefTreeArgument\n * @version 3.0.1\n */\nexport default class XrefTreeArgument {\n  /**\n   * Constructs a new <code>XrefTreeArgument</code>.\n   * @alias module:model/XrefTreeArgument\n   * @class\n   * @implements module:model/IArgument\n   * @param url {String} Url.\n   */\n  constructor(url) {\n    IArgument.call(this);\n    this.url = url;\n  }\n\n  /**\n   * Constructs a <code>XrefTreeArgument</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/XrefTreeArgument} obj Optional instance to populate.\n   * @return {module:model/XrefTreeArgument} The populated <code>XrefTreeArgument</code> instance.\n   */\n  static constructFromObject(data, obj) {\n    if (data) {\n      obj = obj || new XrefTreeArgument();\n      IArgument.constructFromObject(data, obj);\n      if (data.hasOwnProperty('optional'))\n        obj.optional = AutodeskForgeDesignAutomationClient.convertToType(data['optional'], 'Boolean');\n      if (data.hasOwnProperty('localName'))\n        obj.localName = AutodeskForgeDesignAutomationClient.convertToType(data['localName'], 'String');\n      if (data.hasOwnProperty('pathInZip'))\n        obj.pathInZip = AutodeskForgeDesignAutomationClient.convertToType(data['pathInZip'], 'String');\n      if (data.hasOwnProperty('references'))\n        obj.references = AutodeskForgeDesignAutomationClient.convertToType(data['references'], [XrefTreeArgument]);\n      if (data.hasOwnProperty('url'))\n        obj.url = AutodeskForgeDesignAutomationClient.convertToType(data['url'], 'String');\n      if (data.hasOwnProperty('headers'))\n        obj.headers = AutodeskForgeDesignAutomationClient.convertToType(data['headers'], {'String': 'String'});\n      if (data.hasOwnProperty('verb'))\n        obj.verb = Verb.constructFromObject(data['verb']);\n    }\n    return obj;\n  }\n}\n\n/**\n * Argument optionality. Failure to download optional input arguments is OK. Failure to find or upload optional output arguments is OK. Defaults to false.\n * @member {Boolean} optional\n * @default false\n */\nXrefTreeArgument.prototype.optional = false;\n\n/**\n * The file or folder where the contents of an UrlArgument are placed. Note that this may be different than the `localName` for input arguments when [Content-Disposition] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) header is specifified by the server. For `zip` = `true` this is a folder name. See Activity.instructions for more information.\n * @member {String} localName\n */\nXrefTreeArgument.prototype.localName = undefined;\n\n/**\n * Denotes the 'main file` in a zip. See Activity.instructions for more information. If the url does not point to a zip the this parameter is ignored. The parameter references a zip file. This is how this is interpreted in various scenarios: 1. verb==get implies that the byte stream should be unzipped to a folder designated by localName. 2. verb==put, patch, post the contents of the file or folder designated by localName will be zipped and sent. 3. Any other verb values result in an error.\n * @member {String} pathInZip\n */\nXrefTreeArgument.prototype.pathInZip = undefined;\n\n/**\n * @member {Array.<module:model/XrefTreeArgument>} references\n */\nXrefTreeArgument.prototype.references = undefined;\n\n/**\n * Url.\n * @member {String} url\n */\nXrefTreeArgument.prototype.url = undefined;\n\n/**\n * Headers.\n * @member {Object.<String, String>} headers\n */\nXrefTreeArgument.prototype.headers = undefined;\n\n/**\n * The HTTP verb to be used.\n * @member {module:model/Verb} verb\n */\nXrefTreeArgument.prototype.verb = undefined;\n\n// Implement IArgument interface:\n\n\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from \"../AutodeskForgeDesignAutomationClient\";\nimport Activity from '../model/Activity';\nimport Alias from '../model/Alias';\nimport AliasPatch from '../model/AliasPatch';\nimport AppBundle from '../model/AppBundle';\nimport Engine from '../model/Engine';\nimport NicknameRecord from '../model/NicknameRecord';\nimport PageAlias from '../model/PageAlias';\nimport PageInt32 from '../model/PageInt32';\nimport PageShare from '../model/PageShare';\nimport PageString from '../model/PageString';\nimport ServiceLimit from '../model/ServiceLimit';\nimport WorkItem from '../model/WorkItem';\nimport WorkItemStatus from '../model/WorkItemStatus';\n\n/**\n* AutodeskForgeDesignAutomation service.\n* @module api/AutodeskForgeDesignAutomationApi\n* @version 3.0.1\n*/\nexport default class AutodeskForgeDesignAutomationApi {\n\n    /**\n    * Constructs a new AutodeskForgeDesignAutomationApi. \n    * @alias module:api/AutodeskForgeDesignAutomationApi\n    * @class\n    * @param {module:AutodeskForgeDesignAutomationClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:AutodeskForgeDesignAutomationClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || AutodeskForgeDesignAutomationClient.instance;\n    }\n\n\n    /**\n     * Creates a new Activity.\n     * Creates a new Activity.              Limits (varies by Engine):              1. Number of Activities that can be created.\n     * @param {module:model/Activity} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Activity} and HTTP response\n     */\n  // Test: item,customHeader \n  createActivityWithHttpInfo(item,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = item;\n                // verify the required parameter 'item' is set\n                if (item === undefined || item === null) {\n                    throw new Error(\"Missing the required parameter 'item' when calling createActivity\");\n                }\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Activity;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new Activity.\n     * Creates a new Activity.              Limits (varies by Engine):              1. Number of Activities that can be created.\n     * @param {module:model/Activity} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Activity}\n     */\n  createActivity(item,customHeader) {\n      return this.createActivityWithHttpInfo(item,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new alias for this Activity.\n     * Creates a new alias for this Activity.              Limit:              1. Number of aliases (LimitAliases).\n     * @param {String} id Name of Activity (unqualified).\n     * @param {module:model/Alias} alias { id : {anyname}, version : {version number}, receiver : [{id of other Forge app},...] }.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Alias} and HTTP response\n     */\n  // Test: id,alias,customHeader \n  createActivityAliasWithHttpInfo(id,alias,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = alias;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling createActivityAlias\");\n                }\n                // verify the required parameter 'alias' is set\n                if (alias === undefined || alias === null) {\n                    throw new Error(\"Missing the required parameter 'alias' when calling createActivityAlias\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Alias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/aliases', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new alias for this Activity.\n     * Creates a new alias for this Activity.              Limit:              1. Number of aliases (LimitAliases).\n     * @param {String} id Name of Activity (unqualified).\n     * @param {module:model/Alias} alias { id : {anyname}, version : {version number}, receiver : [{id of other Forge app},...] }.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Alias}\n     */\n  createActivityAlias(id,alias,customHeader) {\n      return this.createActivityAliasWithHttpInfo(id,alias,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new version of the Activity.\n     * Creates a new version of the Activity.              Limit:              1. Number of versions (LimitVersions).\n     * @param {String} id Name of Activity (unqualified).\n     * @param {module:model/Activity} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Activity} and HTTP response\n     */\n  // Test: id,item,customHeader \n  createActivityVersionWithHttpInfo(id,item,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = item;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling createActivityVersion\");\n                }\n                // verify the required parameter 'item' is set\n                if (item === undefined || item === null) {\n                    throw new Error(\"Missing the required parameter 'item' when calling createActivityVersion\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Activity;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/versions', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new version of the Activity.\n     * Creates a new version of the Activity.              Limit:              1. Number of versions (LimitVersions).\n     * @param {String} id Name of Activity (unqualified).\n     * @param {module:model/Activity} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Activity}\n     */\n  createActivityVersion(id,item,customHeader) {\n      return this.createActivityVersionWithHttpInfo(id,item,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new AppBundle.\n     * Creates a new AppBundle.              | Limits: (varies by Engine)              | 1. Number of AppBundle that can be created.              | 2. Size of AppBundle.              | This method creates new AppBundle returned in response value.              | POST upload is required to limit upload size.              |              | After this request, you need to upload the AppBundle zip.              | To upload the AppBundle package, create a multipart/form-data request using data received in reponse uploadParameters:              | - endpointURL is the URL to make the upload package request against,              | - formData are the parameters that need to be put into the upload package request body.              |   They must be followed by an extra &#39;file&#39; parameter indicating the location of the package file.              | An example:              |              | curl https://bucketname.s3.amazonaws.com/              | -F key &#x3D; apps/myApp/myfile.zip              | -F content-type &#x3D; application/octet-stream              | -F policy &#x3D; eyJleHBpcmF0aW9uIjoiMjAxOC0wNi0yMVQxMzo...(trimmed)              | -F x-amz-signature &#x3D; 800e52d73579387757e1c1cd88762...(trimmed)              | -F x-amz-credential &#x3D; AKIAIOSFODNN7EXAMPLE/20180621/us-west-2/s3/aws4_request/              | -F x-amz-algorithm &#x3D; AWS4-HMAC-SHA256              | -F x-amz-date &#x3D; 20180621T091656Z              | -F file&#x3D;@E:\\\\myfile.zip              | The &#39;file&#39; field must be at the end, all fields after &#39;file&#39; will be ignored.\n     * @param {module:model/AppBundle} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AppBundle} and HTTP response\n     */\n  // Test: item,customHeader \n  createAppBundleWithHttpInfo(item,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = item;\n                // verify the required parameter 'item' is set\n                if (item === undefined || item === null) {\n                    throw new Error(\"Missing the required parameter 'item' when calling createAppBundle\");\n                }\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = AppBundle;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new AppBundle.\n     * Creates a new AppBundle.              | Limits: (varies by Engine)              | 1. Number of AppBundle that can be created.              | 2. Size of AppBundle.              | This method creates new AppBundle returned in response value.              | POST upload is required to limit upload size.              |              | After this request, you need to upload the AppBundle zip.              | To upload the AppBundle package, create a multipart/form-data request using data received in reponse uploadParameters:              | - endpointURL is the URL to make the upload package request against,              | - formData are the parameters that need to be put into the upload package request body.              |   They must be followed by an extra &#39;file&#39; parameter indicating the location of the package file.              | An example:              |              | curl https://bucketname.s3.amazonaws.com/              | -F key &#x3D; apps/myApp/myfile.zip              | -F content-type &#x3D; application/octet-stream              | -F policy &#x3D; eyJleHBpcmF0aW9uIjoiMjAxOC0wNi0yMVQxMzo...(trimmed)              | -F x-amz-signature &#x3D; 800e52d73579387757e1c1cd88762...(trimmed)              | -F x-amz-credential &#x3D; AKIAIOSFODNN7EXAMPLE/20180621/us-west-2/s3/aws4_request/              | -F x-amz-algorithm &#x3D; AWS4-HMAC-SHA256              | -F x-amz-date &#x3D; 20180621T091656Z              | -F file&#x3D;@E:\\\\myfile.zip              | The &#39;file&#39; field must be at the end, all fields after &#39;file&#39; will be ignored.\n     * @param {module:model/AppBundle} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AppBundle}\n     */\n  createAppBundle(item,customHeader) {\n      return this.createAppBundleWithHttpInfo(item,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new alias for this AppBundle.\n     * Creates a new alias for this AppBundle. Limit: 1. Number of aliases (LimitAliases).\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {module:model/Alias} alias \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Alias} and HTTP response\n     */\n  // Test: id,alias,customHeader \n  createAppBundleAliasWithHttpInfo(id,alias,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = alias;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling createAppBundleAlias\");\n                }\n                // verify the required parameter 'alias' is set\n                if (alias === undefined || alias === null) {\n                    throw new Error(\"Missing the required parameter 'alias' when calling createAppBundleAlias\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Alias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/aliases', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new alias for this AppBundle.\n     * Creates a new alias for this AppBundle. Limit: 1. Number of aliases (LimitAliases).\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {module:model/Alias} alias \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Alias}\n     */\n  createAppBundleAlias(id,alias,customHeader) {\n      return this.createAppBundleAliasWithHttpInfo(id,alias,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new version of the AppBundle.\n     * Creates a new version of the AppBundle.              | Limit:              | 1. Number of versions (LimitVersions).              | 2. Size of AppBundle.              | This method creates new AppBundle returned in response value.              | POST upload is required to limit upload size. The endpoint url and all form fields are retrieved in AppBundle.UploadParameters.              |              | After this request, you need to upload the AppBundle zip.              | Use data received in the response to create multipart/form-data request. An example:              |              | curl https://bucketname.s3.amazonaws.com/              | -F key &#x3D; apps/myApp/myfile.zip              | -F content-type &#x3D; application/octet-stream              | -F policy &#x3D; eyJleHBpcmF0aW9uIjoiMjAxOC0wNi0yMVQxMzo...(trimmed)              | -F x-amz-signature &#x3D; 800e52d73579387757e1c1cd88762...(trimmed)              | -F x-amz-credential &#x3D; AKIAIOSFODNN7EXAMPLE/20180621/us-west-2/s3/aws4_request/              | -F x-amz-algorithm &#x3D; AWS4-HMAC-SHA256              | -F x-amz-date &#x3D; 20180621T091656Z              | -F file&#x3D;@E:\\\\myfile.zip              The &#39;file&#39; field must be at the end, all fields after &#39;file&#39; will be ignored.\n     * @param {String} id Name of app (unqualified).\n     * @param {module:model/AppBundle} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AppBundle} and HTTP response\n     */\n  // Test: id,item,customHeader \n  createAppBundleVersionWithHttpInfo(id,item,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = item;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling createAppBundleVersion\");\n                }\n                // verify the required parameter 'item' is set\n                if (item === undefined || item === null) {\n                    throw new Error(\"Missing the required parameter 'item' when calling createAppBundleVersion\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = AppBundle;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/versions', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new version of the AppBundle.\n     * Creates a new version of the AppBundle.              | Limit:              | 1. Number of versions (LimitVersions).              | 2. Size of AppBundle.              | This method creates new AppBundle returned in response value.              | POST upload is required to limit upload size. The endpoint url and all form fields are retrieved in AppBundle.UploadParameters.              |              | After this request, you need to upload the AppBundle zip.              | Use data received in the response to create multipart/form-data request. An example:              |              | curl https://bucketname.s3.amazonaws.com/              | -F key &#x3D; apps/myApp/myfile.zip              | -F content-type &#x3D; application/octet-stream              | -F policy &#x3D; eyJleHBpcmF0aW9uIjoiMjAxOC0wNi0yMVQxMzo...(trimmed)              | -F x-amz-signature &#x3D; 800e52d73579387757e1c1cd88762...(trimmed)              | -F x-amz-credential &#x3D; AKIAIOSFODNN7EXAMPLE/20180621/us-west-2/s3/aws4_request/              | -F x-amz-algorithm &#x3D; AWS4-HMAC-SHA256              | -F x-amz-date &#x3D; 20180621T091656Z              | -F file&#x3D;@E:\\\\myfile.zip              The &#39;file&#39; field must be at the end, all fields after &#39;file&#39; will be ignored.\n     * @param {String} id Name of app (unqualified).\n     * @param {module:model/AppBundle} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AppBundle}\n     */\n  createAppBundleVersion(id,item,customHeader) {\n      return this.createAppBundleVersionWithHttpInfo(id,item,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates/updates the nickname for the current Forge app.\n     * Creates/updates the nickname for the current Forge app.  The nickname is  used as a clearer alternative name when identifying AppBundles and Activities, as  compared to using the Forge app ID.  Once you have defined a nickname,  it MUST be used instead of the Forge app ID.                The new nickname cannot be in use by any other Forge app.                The Forge app cannot have any data when this endpoint is invoked.  Use the &#39;DELETE /forgeapps/me&#39;  endpoint (cautiously!!!) to remove all data from this Forge app.  &#39;DELETE /forgeapps/me&#39; is  also the only way to remove the nickname.                Note the nickname is supplied in the body, not as a query-parameter.\n     * @param {String} id Must be \\&quot;me\\&quot; for the call to succeed.\n     * @param {module:model/NicknameRecord} nicknameRecord new nickname (public key is for internal use only).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,nicknameRecord,customHeader \n  createNicknameWithHttpInfo(id,nicknameRecord,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = nicknameRecord;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling createNickname\");\n                }\n                // verify the required parameter 'nicknameRecord' is set\n                if (nicknameRecord === undefined || nicknameRecord === null) {\n                    throw new Error(\"Missing the required parameter 'nicknameRecord' when calling createNickname\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/forgeapps/{id}', 'PATCH',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates/updates the nickname for the current Forge app.\n     * Creates/updates the nickname for the current Forge app.  The nickname is  used as a clearer alternative name when identifying AppBundles and Activities, as  compared to using the Forge app ID.  Once you have defined a nickname,  it MUST be used instead of the Forge app ID.                The new nickname cannot be in use by any other Forge app.                The Forge app cannot have any data when this endpoint is invoked.  Use the &#39;DELETE /forgeapps/me&#39;  endpoint (cautiously!!!) to remove all data from this Forge app.  &#39;DELETE /forgeapps/me&#39; is  also the only way to remove the nickname.                Note the nickname is supplied in the body, not as a query-parameter.\n     * @param {String} id Must be \\&quot;me\\&quot; for the call to succeed.\n     * @param {module:model/NicknameRecord} nicknameRecord new nickname (public key is for internal use only).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  createNickname(id,nicknameRecord,customHeader) {\n      return this.createNicknameWithHttpInfo(id,nicknameRecord,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new WorkItem and queues it for processing.\n     * Creates a new WorkItem and queues it for processing.  The new WorkItem is always placed on the queue; no further action is necessary.                Limits (Engine-specific):                1. Number of downloads (LimitDownloads)  2. Number of uploads (LimitUploads)  3. Total download size (LimitDownloadSize)  4. Total upload size (LimitUploadSize)  5. Processing time (LimitProcessingTime)  6. Total size of uncompressed bits for all referenced appbundles (LimitTotalUncompressedAppsSizePerActivity).\n     * @param {module:model/WorkItem} workItem \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/WorkItemStatus} and HTTP response\n     */\n  // Test: workItem,customHeader \n  createWorkItemWithHttpInfo(workItem,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = workItem;\n                // verify the required parameter 'workItem' is set\n                if (workItem === undefined || workItem === null) {\n                    throw new Error(\"Missing the required parameter 'workItem' when calling createWorkItem\");\n                }\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged', '3-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = WorkItemStatus;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/workitems', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new WorkItem and queues it for processing.\n     * Creates a new WorkItem and queues it for processing.  The new WorkItem is always placed on the queue; no further action is necessary.                Limits (Engine-specific):                1. Number of downloads (LimitDownloads)  2. Number of uploads (LimitUploads)  3. Total download size (LimitDownloadSize)  4. Total upload size (LimitUploadSize)  5. Processing time (LimitProcessingTime)  6. Total size of uncompressed bits for all referenced appbundles (LimitTotalUncompressedAppsSizePerActivity).\n     * @param {module:model/WorkItem} workItem \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/WorkItemStatus}\n     */\n  createWorkItem(workItem,customHeader) {\n      return this.createWorkItemWithHttpInfo(workItem,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates new WorkItems and queues them for processing.\n     * Creates one or more  WorkItems and queues them for processing.  The new WorkItems are always placed on the queue; no further action is necessary.                Limits (Engine-specific):                1. Number of downloads (LimitDownloads)  2. Number of uploads (LimitUploads)  3. Total download size (LimitDownloadSize)  4. Total upload size (LimitUploadSize)  5. Processing time (LimitProcessingTime)  6. Total size of uncompressed bits for all referenced appbundles (LimitTotalUncompressedAppsSizePerActivity).\n     * @param {Array.<module:model/WorkItem>} workItems \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/WorkItemStatus>} and HTTP response\n     */\n  // Test: workItems,customHeader \n  createWorkItemsBatchWithHttpInfo(workItems,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = workItems;\n                // verify the required parameter 'workItems' is set\n                if (workItems === undefined || workItems === null) {\n                    throw new Error(\"Missing the required parameter 'workItems' when calling createWorkItemsBatch\");\n                }\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged', '3-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = [WorkItemStatus];\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/workitems/batch', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates new WorkItems and queues them for processing.\n     * Creates one or more  WorkItems and queues them for processing.  The new WorkItems are always placed on the queue; no further action is necessary.                Limits (Engine-specific):                1. Number of downloads (LimitDownloads)  2. Number of uploads (LimitUploads)  3. Total download size (LimitDownloadSize)  4. Total upload size (LimitUploadSize)  5. Processing time (LimitProcessingTime)  6. Total size of uncompressed bits for all referenced appbundles (LimitTotalUncompressedAppsSizePerActivity).\n     * @param {Array.<module:model/WorkItem>} workItems \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/WorkItemStatus>}\n     */\n  createWorkItemsBatch(workItems,customHeader) {\n      return this.createWorkItemsBatchWithHttpInfo(workItems,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes the specified Activity.\n     * Deletes the specified Activity, including all versions and aliases.\n     * @param {String} id Name of Activity (unqualified).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,customHeader \n  deleteActivityWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteActivity\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes the specified Activity.\n     * Deletes the specified Activity, including all versions and aliases.\n     * @param {String} id Name of Activity (unqualified).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteActivity(id,customHeader) {\n      return this.deleteActivityWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes the alias.\n     * Deletes the alias.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {String} aliasId Name of alias to delete.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,aliasId,customHeader \n  deleteActivityAliasWithHttpInfo(id,aliasId,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteActivityAlias\");\n                }\n                // verify the required parameter 'aliasId' is set\n                if (aliasId === undefined || aliasId === null) {\n                    throw new Error(\"Missing the required parameter 'aliasId' when calling deleteActivityAlias\");\n                }\n      let pathParams = {\n        'id': id,\n        'aliasId': aliasId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/aliases/{aliasId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes the alias.\n     * Deletes the alias.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {String} aliasId Name of alias to delete.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteActivityAlias(id,aliasId,customHeader) {\n      return this.deleteActivityAliasWithHttpInfo(id,aliasId,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes the specified version of the Activity.\n     * Deletes the specified version of the Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Number} version Version to delete (integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,version,customHeader \n  deleteActivityVersionWithHttpInfo(id,version,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteActivityVersion\");\n                }\n                // verify the required parameter 'version' is set\n                if (version === undefined || version === null) {\n                    throw new Error(\"Missing the required parameter 'version' when calling deleteActivityVersion\");\n                }\n      let pathParams = {\n        'id': id,\n        'version': version\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/versions/{version}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes the specified version of the Activity.\n     * Deletes the specified version of the Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Number} version Version to delete (integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteActivityVersion(id,version,customHeader) {\n      return this.deleteActivityVersionWithHttpInfo(id,version,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes the specified AppBundle.\n     * Deletes the specified AppBundle, including all versions and aliases.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,customHeader \n  deleteAppBundleWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteAppBundle\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes the specified AppBundle.\n     * Deletes the specified AppBundle, including all versions and aliases.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteAppBundle(id,customHeader) {\n      return this.deleteAppBundleWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes the alias.\n     * Deletes the alias.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {String} aliasId Name of alias to delete.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,aliasId,customHeader \n  deleteAppBundleAliasWithHttpInfo(id,aliasId,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteAppBundleAlias\");\n                }\n                // verify the required parameter 'aliasId' is set\n                if (aliasId === undefined || aliasId === null) {\n                    throw new Error(\"Missing the required parameter 'aliasId' when calling deleteAppBundleAlias\");\n                }\n      let pathParams = {\n        'id': id,\n        'aliasId': aliasId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/aliases/{aliasId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes the alias.\n     * Deletes the alias.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {String} aliasId Name of alias to delete.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteAppBundleAlias(id,aliasId,customHeader) {\n      return this.deleteAppBundleAliasWithHttpInfo(id,aliasId,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes the specified version of the AppBundle.\n     * Deletes the specified version of the AppBundle.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {Number} version Version to delete (as integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,version,customHeader \n  deleteAppBundleVersionWithHttpInfo(id,version,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteAppBundleVersion\");\n                }\n                // verify the required parameter 'version' is set\n                if (version === undefined || version === null) {\n                    throw new Error(\"Missing the required parameter 'version' when calling deleteAppBundleVersion\");\n                }\n      let pathParams = {\n        'id': id,\n        'version': version\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/versions/{version}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes the specified version of the AppBundle.\n     * Deletes the specified version of the AppBundle.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {Number} version Version to delete (as integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteAppBundleVersion(id,version,customHeader) {\n      return this.deleteAppBundleVersionWithHttpInfo(id,version,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Delete all data associated with this Forge app.\n     * Delete all data associated with the given Forge app.                ALL Design Automation appbundles and activities are DELETED.                This may take up to 2 minutes. During this time the app will not be able to make successful requests.\n     * @param {String} id Must be \\&quot;me\\&quot; for the call to succeed.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,customHeader \n  deleteForgeAppWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteForgeApp\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/forgeapps/{id}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Delete all data associated with this Forge app.\n     * Delete all data associated with the given Forge app.                ALL Design Automation appbundles and activities are DELETED.                This may take up to 2 minutes. During this time the app will not be able to make successful requests.\n     * @param {String} id Must be \\&quot;me\\&quot; for the call to succeed.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteForgeApp(id,customHeader) {\n      return this.deleteForgeAppWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Deletes user service limits.\n     * @param {String} owner \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: owner,customHeader \n  deleteServiceLimitsWithHttpInfo(owner,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'owner' is set\n                if (owner === undefined || owner === null) {\n                    throw new Error(\"Missing the required parameter 'owner' when calling deleteServiceLimits\");\n                }\n      let pathParams = {\n        'owner': owner\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/servicelimits/{owner}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Deletes user service limits.\n     * @param {String} owner \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteServiceLimits(owner,customHeader) {\n      return this.deleteServiceLimitsWithHttpInfo(owner,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Cancels a specific WorkItem.\n     * Cancels a specific WorkItem.  If the WorkItem is on the queue, it is removed from the queue and not processed.  If the WorkItem is already being processed, then it may or may not be interrupted and cancelled.  If the WorkItem has already finished processing, then it has no effect on the processing or results.\n     * @param {String} id \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response\n     */\n  // Test: id,customHeader \n  deleteWorkitemWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling deleteWorkitem\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged', '3-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/workitems/{id}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Cancels a specific WorkItem.\n     * Cancels a specific WorkItem.  If the WorkItem is on the queue, it is removed from the queue and not processed.  If the WorkItem is already being processed, then it may or may not be interrupted and cancelled.  If the WorkItem has already finished processing, then it has no effect on the processing or results.\n     * @param {String} id \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}\n     */\n  deleteWorkitem(id,customHeader) {\n      return this.deleteWorkitemWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all available Activities.\n     * Lists all available Activities, including Activities shared with this Forge app.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageString} and HTTP response\n     */\n  // Test: opts,customHeader \n  getActivitiesWithHttpInfo(opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n      let pathParams = {\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageString;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all available Activities.\n     * Lists all available Activities, including Activities shared with this Forge app.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageString}\n     */\n  getActivities(opts,customHeader) {\n      return this.getActivitiesWithHttpInfo(opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets the details of the specified Activity.\n     * Gets the details of the specified Activity. Note that the {id} parameter must be a QualifiedId (owner.name+label).\n     * @param {String} id Full qualified id of the Activity (owner.name+label).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Activity} and HTTP response\n     */\n  // Test: id,customHeader \n  getActivityWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getActivity\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Activity;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets the details of the specified Activity.\n     * Gets the details of the specified Activity. Note that the {id} parameter must be a QualifiedId (owner.name+label).\n     * @param {String} id Full qualified id of the Activity (owner.name+label).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Activity}\n     */\n  getActivity(id,customHeader) {\n      return this.getActivityWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Get alias details.\n     * Get alias details.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Alias} and HTTP response\n     */\n  // Test: id,aliasId,customHeader \n  getActivityAliasWithHttpInfo(id,aliasId,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getActivityAlias\");\n                }\n                // verify the required parameter 'aliasId' is set\n                if (aliasId === undefined || aliasId === null) {\n                    throw new Error(\"Missing the required parameter 'aliasId' when calling getActivityAlias\");\n                }\n      let pathParams = {\n        'id': id,\n        'aliasId': aliasId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Alias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/aliases/{aliasId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get alias details.\n     * Get alias details.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Alias}\n     */\n  getActivityAlias(id,aliasId,customHeader) {\n      return this.getActivityAliasWithHttpInfo(id,aliasId,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all aliases for the specified Activity.\n     * Lists all aliases for the specified Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageAlias} and HTTP response\n     */\n  // Test: id,opts,customHeader \n  getActivityAliasesWithHttpInfo(id,opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getActivityAliases\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageAlias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/aliases', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all aliases for the specified Activity.\n     * Lists all aliases for the specified Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageAlias}\n     */\n  getActivityAliases(id,opts,customHeader) {\n      return this.getActivityAliasesWithHttpInfo(id,opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets the details of the specified version of the Activity.\n     * Gets the details of the specified version of the Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Number} version Version to retrieve (integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Activity} and HTTP response\n     */\n  // Test: id,version,customHeader \n  getActivityVersionWithHttpInfo(id,version,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getActivityVersion\");\n                }\n                // verify the required parameter 'version' is set\n                if (version === undefined || version === null) {\n                    throw new Error(\"Missing the required parameter 'version' when calling getActivityVersion\");\n                }\n      let pathParams = {\n        'id': id,\n        'version': version\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Activity;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/versions/{version}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets the details of the specified version of the Activity.\n     * Gets the details of the specified version of the Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Number} version Version to retrieve (integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Activity}\n     */\n  getActivityVersion(id,version,customHeader) {\n      return this.getActivityVersionWithHttpInfo(id,version,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all versions of the specified Activity.\n     * Lists all versions of the specified Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageInt32} and HTTP response\n     */\n  // Test: id,opts,customHeader \n  getActivityVersionsWithHttpInfo(id,opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getActivityVersions\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageInt32;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/versions', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all versions of the specified Activity.\n     * Lists all versions of the specified Activity.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageInt32}\n     */\n  getActivityVersions(id,opts,customHeader) {\n      return this.getActivityVersionsWithHttpInfo(id,opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets the details of the specified AppBundle.\n     * Gets the details of the specified AppBundle. Note that the {id} parameter must be a QualifiedId (owner.name+label).\n     * @param {String} id Full qualified id of the AppBundle (owner.name+label).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AppBundle} and HTTP response\n     */\n  // Test: id,customHeader \n  getAppBundleWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getAppBundle\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = AppBundle;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets the details of the specified AppBundle.\n     * Gets the details of the specified AppBundle. Note that the {id} parameter must be a QualifiedId (owner.name+label).\n     * @param {String} id Full qualified id of the AppBundle (owner.name+label).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AppBundle}\n     */\n  getAppBundle(id,customHeader) {\n      return this.getAppBundleWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Get alias details.\n     * Get alias details.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Alias} and HTTP response\n     */\n  // Test: id,aliasId,customHeader \n  getAppBundleAliasWithHttpInfo(id,aliasId,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getAppBundleAlias\");\n                }\n                // verify the required parameter 'aliasId' is set\n                if (aliasId === undefined || aliasId === null) {\n                    throw new Error(\"Missing the required parameter 'aliasId' when calling getAppBundleAlias\");\n                }\n      let pathParams = {\n        'id': id,\n        'aliasId': aliasId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Alias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/aliases/{aliasId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get alias details.\n     * Get alias details.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Alias}\n     */\n  getAppBundleAlias(id,aliasId,customHeader) {\n      return this.getAppBundleAliasWithHttpInfo(id,aliasId,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all aliases for the specified AppBundle.\n     * Lists all aliases for the specified AppBundle.\n     * @param {String} id Name of activity (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageAlias} and HTTP response\n     */\n  // Test: id,opts,customHeader \n  getAppBundleAliasesWithHttpInfo(id,opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getAppBundleAliases\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageAlias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/aliases', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all aliases for the specified AppBundle.\n     * Lists all aliases for the specified AppBundle.\n     * @param {String} id Name of activity (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageAlias}\n     */\n  getAppBundleAliases(id,opts,customHeader) {\n      return this.getAppBundleAliasesWithHttpInfo(id,opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets the details of the specified version of the AppBundle.\n     * Gets the details of the specified version of the AppBundle.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {Number} version Version to retrieve (as integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AppBundle} and HTTP response\n     */\n  // Test: id,version,customHeader \n  getAppBundleVersionWithHttpInfo(id,version,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getAppBundleVersion\");\n                }\n                // verify the required parameter 'version' is set\n                if (version === undefined || version === null) {\n                    throw new Error(\"Missing the required parameter 'version' when calling getAppBundleVersion\");\n                }\n      let pathParams = {\n        'id': id,\n        'version': version\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = AppBundle;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/versions/{version}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets the details of the specified version of the AppBundle.\n     * Gets the details of the specified version of the AppBundle.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {Number} version Version to retrieve (as integer).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AppBundle}\n     */\n  getAppBundleVersion(id,version,customHeader) {\n      return this.getAppBundleVersionWithHttpInfo(id,version,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all versions of the specified AppBundle.\n     * Lists all versions of the specified AppBundle.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageInt32} and HTTP response\n     */\n  // Test: id,opts,customHeader \n  getAppBundleVersionsWithHttpInfo(id,opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getAppBundleVersions\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageInt32;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/versions', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all versions of the specified AppBundle.\n     * Lists all versions of the specified AppBundle.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageInt32}\n     */\n  getAppBundleVersions(id,opts,customHeader) {\n      return this.getAppBundleVersionsWithHttpInfo(id,opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all available AppBundles.\n     * Lists all available AppBundles, including AppBundles shared with this Forge app.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageString} and HTTP response\n     */\n  // Test: opts,customHeader \n  getAppBundlesWithHttpInfo(opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n      let pathParams = {\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageString;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all available AppBundles.\n     * Lists all available AppBundles, including AppBundles shared with this Forge app.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageString}\n     */\n  getAppBundles(opts,customHeader) {\n      return this.getAppBundlesWithHttpInfo(opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets the details of the specified Engine.\n     * Gets the details of the specified Engine. Note that the {id} parameter must be a QualifiedId (owner.name+label).\n     * @param {String} id Full qualified id of the Engine (owner.name+label).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Engine} and HTTP response\n     */\n  // Test: id,customHeader \n  getEngineWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getEngine\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Engine;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/engines/{id}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets the details of the specified Engine.\n     * Gets the details of the specified Engine. Note that the {id} parameter must be a QualifiedId (owner.name+label).\n     * @param {String} id Full qualified id of the Engine (owner.name+label).\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Engine}\n     */\n  getEngine(id,customHeader) {\n      return this.getEngineWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Lists all available Engines.\n     * Lists all available Engines.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageString} and HTTP response\n     */\n  // Test: opts,customHeader \n  getEnginesWithHttpInfo(opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n      let pathParams = {\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageString;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/engines', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Lists all available Engines.\n     * Lists all available Engines.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Access an additional &#39;page&#39; of data when necessary, based on the &#39;paginationToken&#39; returned from a previous invocation.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageString}\n     */\n  getEngines(opts,customHeader) {\n      return this.getEnginesWithHttpInfo(opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Returns the user&#39;s (app) nickname.\n     * Return the given Forge app&#39;s nickname.                If the app has no nickname, this route will return its id.\n     * @param {String} id Must be \\&quot;me\\&quot; for the call to succeed.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link 'String'} and HTTP response\n     */\n  // Test: id,customHeader \n  getNicknameWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getNickname\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/forgeapps/{id}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Returns the user&#39;s (app) nickname.\n     * Return the given Forge app&#39;s nickname.                If the app has no nickname, this route will return its id.\n     * @param {String} id Must be \\&quot;me\\&quot; for the call to succeed.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link 'String'}\n     */\n  getNickname(id,customHeader) {\n      return this.getNicknameWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Get the service limit configuration.\n     * Gets a user&#39;s service limit configuration.\n     * @param {String} owner The user to fetch the service limit configuration for.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ServiceLimit} and HTTP response\n     */\n  // Test: owner,customHeader \n  getServiceLimitWithHttpInfo(owner,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'owner' is set\n                if (owner === undefined || owner === null) {\n                    throw new Error(\"Missing the required parameter 'owner' when calling getServiceLimit\");\n                }\n      let pathParams = {\n        'owner': owner\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = ServiceLimit;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/servicelimits/{owner}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get the service limit configuration.\n     * Gets a user&#39;s service limit configuration.\n     * @param {String} owner The user to fetch the service limit configuration for.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ServiceLimit}\n     */\n  getServiceLimit(owner,customHeader) {\n      return this.getServiceLimitWithHttpInfo(owner,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets all Shares (AppBundles and Activities) shared by this Forge app.\n     * Gets all Shares (AppBundles and Activities) shared by this Forge app (shared to other  Forge apps for them to use).                Sharing of AppBundles and Activities is controlled via the use of &#39;aliases&#39;.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Used to get subsequent &#39;pages&#39; of data.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PageShare} and HTTP response\n     */\n  // Test: opts,customHeader \n  getSharesWithHttpInfo(opts,customHeader) {\n      opts = opts || {};\n      customHeader = customHeader || {};\n      let postBody = null;\n      let pathParams = {\n      };\n      let queryParams = {\n        'page': opts['page']\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = PageShare;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/shares', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets all Shares (AppBundles and Activities) shared by this Forge app.\n     * Gets all Shares (AppBundles and Activities) shared by this Forge app (shared to other  Forge apps for them to use).                Sharing of AppBundles and Activities is controlled via the use of &#39;aliases&#39;.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.page Used to get subsequent &#39;pages&#39; of data.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PageShare}\n     */\n  getShares(opts,customHeader) {\n      return this.getSharesWithHttpInfo(opts,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Gets the status of a specific WorkItem.\n     * Gets the status of a specific WorkItem.  Typically used to &#39;poll&#39; for              the completion of a WorkItem, but see the use of the &#39;onComplete&#39; argument for              an alternative that does not require &#39;polling&#39;.  WorkItem status is retained              for a limited period of time after the WorkItem completes.              Limits:              1. Retention period (LimitWorkItemRetentionPeriod).\n     * @param {String} id \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/WorkItemStatus} and HTTP response\n     */\n  // Test: id,customHeader \n  getWorkitemStatusWithHttpInfo(id,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling getWorkitemStatus\");\n                }\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged', '3-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = WorkItemStatus;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/workitems/{id}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Gets the status of a specific WorkItem.\n     * Gets the status of a specific WorkItem.  Typically used to &#39;poll&#39; for              the completion of a WorkItem, but see the use of the &#39;onComplete&#39; argument for              an alternative that does not require &#39;polling&#39;.  WorkItem status is retained              for a limited period of time after the WorkItem completes.              Limits:              1. Retention period (LimitWorkItemRetentionPeriod).\n     * @param {String} id \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/WorkItemStatus}\n     */\n  getWorkitemStatus(id,customHeader) {\n      return this.getWorkitemStatusWithHttpInfo(id,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * \n     * Gets the health status by Engine or for all Engines (Inventor, AutoCAD ...).\n     * @param {String} engine \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link 'String'} and HTTP response\n     */\n  // Test: engine,customHeader \n  healthStatusWithHttpInfo(engine,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = null;\n                // verify the required parameter 'engine' is set\n                if (engine === undefined || engine === null) {\n                    throw new Error(\"Missing the required parameter 'engine' when calling healthStatus\");\n                }\n      let pathParams = {\n        'engine': engine\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = null;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/health/{engine}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * \n     * Gets the health status by Engine or for all Engines (Inventor, AutoCAD ...).\n     * @param {String} engine \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link 'String'}\n     */\n  healthStatus(engine,customHeader) {\n      return this.healthStatusWithHttpInfo(engine,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Modify alias details.\n     * Modify alias details.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @param {module:model/AliasPatch} alias Alias details to be modified.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Alias} and HTTP response\n     */\n  // Test: id,aliasId,alias,customHeader \n  modifyActivityAliasWithHttpInfo(id,aliasId,alias,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = alias;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling modifyActivityAlias\");\n                }\n                // verify the required parameter 'aliasId' is set\n                if (aliasId === undefined || aliasId === null) {\n                    throw new Error(\"Missing the required parameter 'aliasId' when calling modifyActivityAlias\");\n                }\n                // verify the required parameter 'alias' is set\n                if (alias === undefined || alias === null) {\n                    throw new Error(\"Missing the required parameter 'alias' when calling modifyActivityAlias\");\n                }\n      let pathParams = {\n        'id': id,\n        'aliasId': aliasId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Alias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/activities/{id}/aliases/{aliasId}', 'PATCH',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Modify alias details.\n     * Modify alias details.\n     * @param {String} id Name of Activity (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @param {module:model/AliasPatch} alias Alias details to be modified.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Alias}\n     */\n  modifyActivityAlias(id,aliasId,alias,customHeader) {\n      return this.modifyActivityAliasWithHttpInfo(id,aliasId,alias,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Modify alias details.\n     * Modify alias details.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @param {module:model/AliasPatch} alias Alias details to be modified.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Alias} and HTTP response\n     */\n  // Test: id,aliasId,alias,customHeader \n  modifyAppBundleAliasWithHttpInfo(id,aliasId,alias,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = alias;\n                // verify the required parameter 'id' is set\n                if (id === undefined || id === null) {\n                    throw new Error(\"Missing the required parameter 'id' when calling modifyAppBundleAlias\");\n                }\n                // verify the required parameter 'aliasId' is set\n                if (aliasId === undefined || aliasId === null) {\n                    throw new Error(\"Missing the required parameter 'aliasId' when calling modifyAppBundleAlias\");\n                }\n                // verify the required parameter 'alias' is set\n                if (alias === undefined || alias === null) {\n                    throw new Error(\"Missing the required parameter 'alias' when calling modifyAppBundleAlias\");\n                }\n      let pathParams = {\n        'id': id,\n        'aliasId': aliasId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = Alias;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/appbundles/{id}/aliases/{aliasId}', 'PATCH',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Modify alias details.\n     * Modify alias details.\n     * @param {String} id Name of AppBundle (unqualified).\n     * @param {String} aliasId Name of alias.\n     * @param {module:model/AliasPatch} alias Alias details to be modified.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Alias}\n     */\n  modifyAppBundleAlias(id,aliasId,alias,customHeader) {\n      return this.modifyAppBundleAliasWithHttpInfo(id,aliasId,alias,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n    /**\n     * Creates a new service limits configuration or updates exiting.\n     * Creates a new service limits configuration or updates exiting.\n     * @param {String} owner The user to associate the configuration to.\n     * @param {module:model/ServiceLimit} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ServiceLimit} and HTTP response\n     */\n  // Test: owner,item,customHeader \n  modifyServiceLimitsWithHttpInfo(owner,item,customHeader) {\n      customHeader = customHeader || {};\n      let postBody = item;\n                // verify the required parameter 'owner' is set\n                if (owner === undefined || owner === null) {\n                    throw new Error(\"Missing the required parameter 'owner' when calling modifyServiceLimits\");\n                }\n                // verify the required parameter 'item' is set\n                if (item === undefined || item === null) {\n                    throw new Error(\"Missing the required parameter 'item' when calling modifyServiceLimits\");\n                }\n      let pathParams = {\n        'owner': owner\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      headerParams = Object.assign(headerParams, customHeader);\n      \n      let formParams = {\n      };\n\n      let authNames = ['2-legged'];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = ServiceLimit;\n\n      if(returnType === null) {\n        returnType = contentTypes[0];\n      }\n\n\n      return this.apiClient.callApi(\n        '/v3/servicelimits/{owner}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Creates a new service limits configuration or updates exiting.\n     * Creates a new service limits configuration or updates exiting.\n     * @param {String} owner The user to associate the configuration to.\n     * @param {module:model/ServiceLimit} item \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ServiceLimit}\n     */\n  modifyServiceLimits(owner,item,customHeader) {\n      return this.modifyServiceLimitsWithHttpInfo(owner,item,customHeader)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n","/**\n * autodesk.forge.designautomation\n * Asynchronous Node.js library for the Autodesk Forge Design Automation v3 implementation.\n *\n * OpenAPI spec version: 3.0.1\n * Contact: forge.help@autodesk.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AutodeskForgeDesignAutomationClient from './AutodeskForgeDesignAutomationClient';\nimport Activity from './model/Activity';\nimport Alias from './model/Alias';\nimport AliasPatch from './model/AliasPatch';\nimport AppBundle from './model/AppBundle';\nimport BackendLimits from './model/BackendLimits';\nimport Engine from './model/Engine';\nimport FrontendLimits from './model/FrontendLimits';\nimport IArgument from './model/IArgument';\nimport ISetting from './model/ISetting';\nimport NicknameRecord from './model/NicknameRecord';\nimport PageAlias from './model/PageAlias';\nimport PageInt32 from './model/PageInt32';\nimport PageShare from './model/PageShare';\nimport PageString from './model/PageString';\nimport Parameter from './model/Parameter';\nimport PublicKey from './model/PublicKey';\nimport ServiceLimit from './model/ServiceLimit';\nimport Share from './model/Share';\nimport ShareType from './model/ShareType';\nimport SignedUrl from './model/SignedUrl';\nimport Statistics from './model/Statistics';\nimport Status from './model/Status';\nimport UploadAppBundleParameters from './model/UploadAppBundleParameters';\nimport Verb from './model/Verb';\nimport WorkItem from './model/WorkItem';\nimport WorkItemSignatures from './model/WorkItemSignatures';\nimport WorkItemStatus from './model/WorkItemStatus';\nimport StringArgument from './model/StringArgument';\nimport StringSetting from './model/StringSetting';\nimport UrlSetting from './model/UrlSetting';\nimport XrefTreeArgument from './model/XrefTreeArgument';\nimport AutodeskForgeDesignAutomationApi from './api/AutodeskForgeDesignAutomationApi';\n\n\n/**\n* Asynchronous_Node_js_library_for_the_Autodesk_Forge_Design_Automation_v3_implementation_.<br>\n* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n* <p>\n* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n* <pre>\n* var Autodeskforgedesignautomation = require('index'); // See note below*.\n* var xxxSvc = new Autodeskforgedesignautomation.XxxApi(); // Allocate the API class we're going to use.\n* var yyyModel = new Autodeskforgedesignautomation.Yyy(); // Construct a model instance.\n* yyyModel.someProperty = 'someValue';\n* ...\n* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n* ...\n* </pre>\n* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n* and put the application logic within the callback function.</em>\n* </p>\n* <p>\n* A non-AMD browser application (discouraged) might do something like this:\n* <pre>\n* var xxxSvc = new Autodeskforgedesignautomation.XxxApi(); // Allocate the API class we're going to use.\n* var yyy = new Autodeskforgedesignautomation.Yyy(); // Construct a model instance.\n* yyyModel.someProperty = 'someValue';\n* ...\n* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n* ...\n* </pre>\n* </p>\n* @module index\n* @version 3.0.1\n*/\nexport {\n    /**\n     * The AutodeskForgeDesignAutomationClient constructor.\n     * @property {module:AutodeskForgeDesignAutomationClient}\n     */\n    AutodeskForgeDesignAutomationClient,\n\n    /**\n     * The Activity model constructor.\n     * @property {module:model/Activity}\n     */\n    Activity,\n\n    /**\n     * The Alias model constructor.\n     * @property {module:model/Alias}\n     */\n    Alias,\n\n    /**\n     * The AliasPatch model constructor.\n     * @property {module:model/AliasPatch}\n     */\n    AliasPatch,\n\n    /**\n     * The AppBundle model constructor.\n     * @property {module:model/AppBundle}\n     */\n    AppBundle,\n\n    /**\n     * The BackendLimits model constructor.\n     * @property {module:model/BackendLimits}\n     */\n    BackendLimits,\n\n    /**\n     * The Engine model constructor.\n     * @property {module:model/Engine}\n     */\n    Engine,\n\n    /**\n     * The FrontendLimits model constructor.\n     * @property {module:model/FrontendLimits}\n     */\n    FrontendLimits,\n\n    /**\n     * The IArgument model constructor.\n     * @property {module:model/IArgument}\n     */\n    IArgument,\n\n    /**\n     * The ISetting model constructor.\n     * @property {module:model/ISetting}\n     */\n    ISetting,\n\n    /**\n     * The NicknameRecord model constructor.\n     * @property {module:model/NicknameRecord}\n     */\n    NicknameRecord,\n\n    /**\n     * The PageAlias model constructor.\n     * @property {module:model/PageAlias}\n     */\n    PageAlias,\n\n    /**\n     * The PageInt32 model constructor.\n     * @property {module:model/PageInt32}\n     */\n    PageInt32,\n\n    /**\n     * The PageShare model constructor.\n     * @property {module:model/PageShare}\n     */\n    PageShare,\n\n    /**\n     * The PageString model constructor.\n     * @property {module:model/PageString}\n     */\n    PageString,\n\n    /**\n     * The Parameter model constructor.\n     * @property {module:model/Parameter}\n     */\n    Parameter,\n\n    /**\n     * The PublicKey model constructor.\n     * @property {module:model/PublicKey}\n     */\n    PublicKey,\n\n    /**\n     * The ServiceLimit model constructor.\n     * @property {module:model/ServiceLimit}\n     */\n    ServiceLimit,\n\n    /**\n     * The Share model constructor.\n     * @property {module:model/Share}\n     */\n    Share,\n\n    /**\n     * The ShareType model constructor.\n     * @property {module:model/ShareType}\n     */\n    ShareType,\n\n    /**\n     * The SignedUrl model constructor.\n     * @property {module:model/SignedUrl}\n     */\n    SignedUrl,\n\n    /**\n     * The Statistics model constructor.\n     * @property {module:model/Statistics}\n     */\n    Statistics,\n\n    /**\n     * The Status model constructor.\n     * @property {module:model/Status}\n     */\n    Status,\n\n    /**\n     * The UploadAppBundleParameters model constructor.\n     * @property {module:model/UploadAppBundleParameters}\n     */\n    UploadAppBundleParameters,\n\n    /**\n     * The Verb model constructor.\n     * @property {module:model/Verb}\n     */\n    Verb,\n\n    /**\n     * The WorkItem model constructor.\n     * @property {module:model/WorkItem}\n     */\n    WorkItem,\n\n    /**\n     * The WorkItemSignatures model constructor.\n     * @property {module:model/WorkItemSignatures}\n     */\n    WorkItemSignatures,\n\n    /**\n     * The WorkItemStatus model constructor.\n     * @property {module:model/WorkItemStatus}\n     */\n    WorkItemStatus,\n\n    /**\n     * The StringArgument model constructor.\n     * @property {module:model/StringArgument}\n     */\n    StringArgument,\n\n    /**\n     * The StringSetting model constructor.\n     * @property {module:model/StringSetting}\n     */\n    StringSetting,\n\n    /**\n     * The UrlSetting model constructor.\n     * @property {module:model/UrlSetting}\n     */\n    UrlSetting,\n\n    /**\n     * The XrefTreeArgument model constructor.\n     * @property {module:model/XrefTreeArgument}\n     */\n    XrefTreeArgument,\n\n    /**\n    * The AutodeskForgeDesignAutomationApi service constructor.\n    * @property {module:api/AutodeskForgeDesignAutomationApi}\n    */\n    AutodeskForgeDesignAutomationApi\n};\n"],"names":["OAuth2Manager","config","that","authConfig","oauth2Token","preserveOAuth2Config","setTimeout","refreshTokenPromise","_oauth2RefreshTokenScheduled","window","clearTimeout","fetchTokenPromise","oauth2Config","isNaN","expires_in","refreshToken","then","data","clearOff","storeOAuth2Token","refreshOAuth2Token","fetchToken","Math","max","accessToken","access_token","expiresIn","fetchOAuth2Token","Promise","resolve","reject","tokenFetcher","OAuth2Token","Object","assign","val","fun","apiKeyManager","apiKey","basicAuthManager","basicAuth","AuthManager","_authentications","authentications","init","authName","manager","type","Error","auth","authManager","econnreset","err","res","code","econnrefused","etimedout","eaddrinfo","esockettimedout","internal","status","gateway","indexOf","timeout","test","message","possibleServerError","error","response","isServerSideIssue","aborted","crossdomain","crossDomain","possibleClientError","AutodeskForgeDesignAutomationClient","resiliencyConfig","_validateConfig","basePath","replace","defaultHeaders","requestTimeout","maxNumberOfRetries","retry","circuitBreakerConfig","id","volumeThreshold","circuitBreaker","failureThreshold","activeThreshold","bucketCount","bucketDuration","monitor","circuitBreakerMonitor","bind","isFailure","circuitBreakerIsFailure","fallback","undefined","cache","enableCookies","agent","superagent","requestAgent","defaultConfig","backoffDelay","backoffPolicy","eventType","eventData","circuitBreakerMetricsListener","e","console","log","serverIssue","responseChecks","param","Date","toJSON","toString","path","pathParams","match","url","fullMatch","key","value","hasOwnProperty","paramToString","encodeURIComponent","contentType","Boolean","contentTypes","i","length","isJsonMime","require","fs","ReadStream","Buffer","Blob","File","params","newParams","isFileParam","Array","isArray","collectionFormat","map","join","request","authNames","each","cb","username","password","apiKeyPrefix","name","set","query","getOAuth2TokenInfo","returnType","body","keys","text","convertToType","httpMethod","queryParams","headerParams","formParams","bodyParam","accepts","callback","buildUrl","applyAuthToRequest","toUpperCase","getTime","normalizeParams","jsonPreferredMime","header","send","stringify","_formParams","attach","field","accept","responseType","attachCookies","withCredentials","execute","end","deserialize","saveCookies","requestExtender","userAgent","concat","base","max_backoff","requestStrategies","exponentialBackoffWithJitter","retryCount","delay","min","random","pow","exponentialBackoff","fixedBackoff","aliasConfig","canRetry","retryable","delayCalculator","retryPolicy","_apiCaller","executor","_this","call","resp","_circuitBreaker","apiClientInstance","result","errObj","successCB","failureCB","times","interval","errorFilter","CSV","SSV","TSV","PIPES","MULTI","str","parseInt","parseFloat","String","parseDate","constructFromObject","itemType","item","keyType","valueType","k","obj","instance","CircuitBreakerFactory","create","ISetting","Verb","object","Parameter","verb","zip","ondemand","description","required","localName","prototype","Activity","commandLine","engine","parameters","appbundles","settings","version","Alias","receiver","AliasPatch","UploadAppBundleParameters","endpointURL","formData","AppBundle","uploadParameters","BackendLimits","limitDownloads","limitUploads","limitDownloadSizeMB","limitUploadSizeMB","limitProcessingTimeSec","limitTotalUncompressedAppsSizeInMB","Engine","FrontendLimits","limitPayloadSizeInKB","limitVersions","limitAliases","limitPublicAliases","limitAppUploadSizeInMB","limitMonthlyProcessingTimeInHours","IArgument","PublicKey","exponent","modulus","NicknameRecord","nickname","publicKey","PageAlias","paginationToken","PageInt32","ShareType","Share","PageShare","PageString","ServiceLimit","frontendLimits","backendLimits","SignedUrl","signature","Statistics","timeQueued","timeDownloadStarted","timeInstructionsStarted","timeInstructionsEnded","timeUploadEnded","timeFinished","bytesDownloaded","bytesUploaded","Status","WorkItemSignatures","activityId","baseUrls","WorkItem","arguments","signatures","WorkItemStatus","progress","reportUrl","stats","StringArgument","StringSetting","isEnvironmentVariable","UrlSetting","headers","XrefTreeArgument","optional","pathInZip","references","AutodeskForgeDesignAutomationApi","apiClient","customHeader","postBody","callApi","createActivityWithHttpInfo","response_and_data","alias","createActivityAliasWithHttpInfo","createActivityVersionWithHttpInfo","createAppBundleWithHttpInfo","createAppBundleAliasWithHttpInfo","createAppBundleVersionWithHttpInfo","nicknameRecord","createNicknameWithHttpInfo","workItem","createWorkItemWithHttpInfo","workItems","createWorkItemsBatchWithHttpInfo","deleteActivityWithHttpInfo","aliasId","deleteActivityAliasWithHttpInfo","deleteActivityVersionWithHttpInfo","deleteAppBundleWithHttpInfo","deleteAppBundleAliasWithHttpInfo","deleteAppBundleVersionWithHttpInfo","deleteForgeAppWithHttpInfo","owner","deleteServiceLimitsWithHttpInfo","deleteWorkitemWithHttpInfo","opts","getActivitiesWithHttpInfo","getActivityWithHttpInfo","getActivityAliasWithHttpInfo","getActivityAliasesWithHttpInfo","getActivityVersionWithHttpInfo","getActivityVersionsWithHttpInfo","getAppBundleWithHttpInfo","getAppBundleAliasWithHttpInfo","getAppBundleAliasesWithHttpInfo","getAppBundleVersionWithHttpInfo","getAppBundleVersionsWithHttpInfo","getAppBundlesWithHttpInfo","getEngineWithHttpInfo","getEnginesWithHttpInfo","getNicknameWithHttpInfo","getServiceLimitWithHttpInfo","getSharesWithHttpInfo","getWorkitemStatusWithHttpInfo","healthStatusWithHttpInfo","modifyActivityAliasWithHttpInfo","modifyAppBundleAliasWithHttpInfo","modifyServiceLimitsWithHttpInfo"],"mappings":"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"}